
C************************************************
C           MACHINE LEARNING FOR INDOOR FARM CODE BY T. ZOHDI
C
C           BY MINIMIZING A COST
C
C           USING MACHINE-LEARNING/GENETIC ALGORITHM
C
C************************************************
C                   COPYRIGHT TAREK ZOHDI
C                    DO NOT DISTRIBUTE
C************************************************
CMOVIE CONVERTER: ffmpeg -i test.mp4 -acodec copy -vcodec copy -f mov test5.mov

      IMPLICIT NONE

CCCCCCCCCCCCC
C    MACHINE-LEARNING ALGORITHM
CCCCCCCCCCCCCC

      INTEGER NOFLAG(100000),RANDSEED,AVOPTION
      INTEGER IRNUM,CHILDREN,RESTRICTED,READAPTOPTION,OVERRIDE
      INTEGER COUNT,LIMIT,I,I0,I1,I2,N,ACTIVE(50),POPULATION,MINIMUM
      INTEGER RANK(100000),FLAG(100000),GENERATION,TOP,TOP2,KEEP,TOP3
      INTEGER LASTREADAPT,READAPTCYCLE,READAPT,PRINTSCREEN
c      INTEGER STOREDATA
      DOUBLE PRECISION DESPOTENTIAL,DESIRED(3),PHI(50),AVFITNESS
      DOUBLE PRECISION DESCOST(50),DESEXPO(50),DESWEIGHT(50)
      DOUBLE PRECISION TPARA(50),UPBOUND(50),LOWBOUND(50),RTOP2,BASE(50)
      DOUBLE PRECISION UPBOUND0(50),LOWBOUND0(50)
      DOUBLE PRECISION STRING(100000,50),NEWSTRING(100000,50)
      DOUBLE PRECISION OLDSTRING(100000,50),OLDFITNESS(100000)
      DOUBLE PRECISION TEMPSTRING(100000,50),TEMPFITNESS(100000),STOPTOL
      DOUBLE PRECISION FITNESS(100000),A,B,LARGEST,RANDNUMBER
      DOUBLE PRECISION READAPTINCREMENT,GAP,GAPLIMIT


CCCCCCCCCCCCCCCCCCCCCCCCC
C      APERATURE (18 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC

       DOUBLE PRECISION A1MAX,A1MIN
       DOUBLE PRECISION A2MAX,A2MIN
       DOUBLE PRECISION A3MAX,A3MIN
       DOUBLE PRECISION A4MAX,A4MIN
       DOUBLE PRECISION A5MAX,A5MIN
       DOUBLE PRECISION A6MAX,A6MIN
       DOUBLE PRECISION A7MAX,A7MIN
       DOUBLE PRECISION A8MAX,A8MIN
       DOUBLE PRECISION A9MAX,A9MIN
       DOUBLE PRECISION A10MAX,A10MIN
       DOUBLE PRECISION A11MAX,A11MIN
       DOUBLE PRECISION A12MAX,A12MIN
       DOUBLE PRECISION A13MAX,A13MIN
       DOUBLE PRECISION A14MAX,A14MIN
       DOUBLE PRECISION A15MAX,A15MIN
       DOUBLE PRECISION A16MAX,A16MIN
       DOUBLE PRECISION A17MAX,A17MIN
       DOUBLE PRECISION A18MAX,A18MIN

CCCCCCCCCCCCCCCCCCCCCCCCC
C      SOURCETUBE (12 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC

       DOUBLE PRECISION FORPLUSX3SOURCETUBEX1MAX,
     $FORPLUSX3SOURCETUBEX1MIN
       DOUBLE PRECISION FORPLUSX3SOURCETUBEX2MAX,
     $FORPLUSX3SOURCETUBEX2MIN
       DOUBLE PRECISION FORMINUSX3SOURCETUBEX1MAX,
     $FORMINUSX3SOURCETUBEX1MIN
       DOUBLE PRECISION FORMINUSX3SOURCETUBEX2MAX,
     $FORMINUSX3SOURCETUBEX2MIN
       DOUBLE PRECISION FORPLUSX2SOURCETUBEX1MAX,
     $FORPLUSX2SOURCETUBEX1MIN
       DOUBLE PRECISION FORPLUSX2SOURCETUBEX3MAX,
     $FORPLUSX2SOURCETUBEX3MIN
       DOUBLE PRECISION FORMINUSX2SOURCETUBEX1MAX,
     $FORMINUSX2SOURCETUBEX1MIN
       DOUBLE PRECISION FORMINUSX2SOURCETUBEX3MAX,
     $FORMINUSX2SOURCETUBEX3MIN
       DOUBLE PRECISION FORPLUSX1SOURCETUBEX2MAX,
     $FORPLUSX1SOURCETUBEX2MIN
       DOUBLE PRECISION FORPLUSX1SOURCETUBEX3MAX,
     $FORPLUSX1SOURCETUBEX3MIN
       DOUBLE PRECISION FORMINUSX1SOURCETUBEX2MAX,
     $FORMINUSX1SOURCETUBEX2MIN
       DOUBLE PRECISION FORMINUSX1SOURCETUBEX3MAX,
     $FORMINUSX1SOURCETUBEX3MIN
CCCCCCCCCCCCCCCCCCCCCCCCC
C     POWER DEPENDENCY (6 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC

      DOUBLE PRECISION MAGFACEPOWERX1MINUSMAX,MAGFACEPOWERX1MINUSMIN
      DOUBLE PRECISION MAGFACEPOWERX1PLUSMAX,MAGFACEPOWERX1PLUSMIN
      DOUBLE PRECISION MAGFACEPOWERX2MINUSMAX,MAGFACEPOWERX2MINUSMIN
      DOUBLE PRECISION MAGFACEPOWERX2PLUSMAX,MAGFACEPOWERX2PLUSMIN
      DOUBLE PRECISION MAGFACEPOWERX3MINUSMAX,MAGFACEPOWERX3MINUSMIN
      DOUBLE PRECISION MAGFACEPOWERX3PLUSMAX,MAGFACEPOWERX3PLUSMIN
CCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C    STARTING FOR OPTIMIZATION
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCC
C      APERATURE (18 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC

       DOUBLE PRECISION A1START
       DOUBLE PRECISION A2START
       DOUBLE PRECISION A3START
       DOUBLE PRECISION A4START
       DOUBLE PRECISION A5START
       DOUBLE PRECISION A6START
       DOUBLE PRECISION A7START
       DOUBLE PRECISION A8START
       DOUBLE PRECISION A9START
       DOUBLE PRECISION A10START
       DOUBLE PRECISION A11START
       DOUBLE PRECISION A12START
       DOUBLE PRECISION A13START
       DOUBLE PRECISION A14START
       DOUBLE PRECISION A15START
       DOUBLE PRECISION A16START
       DOUBLE PRECISION A17START
       DOUBLE PRECISION A18START

CCCCCCCCCCCCCCCCCCCCCCCCC
C      SOURCETUBE (12 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC
       DOUBLE PRECISION FORPLUSX3SOURCETUBEX1START
       DOUBLE PRECISION FORPLUSX3SOURCETUBEX2START
       DOUBLE PRECISION FORMINUSX3SOURCETUBEX1START
       DOUBLE PRECISION FORMINUSX3SOURCETUBEX2START
       DOUBLE PRECISION FORPLUSX2SOURCETUBEX1START
       DOUBLE PRECISION FORPLUSX2SOURCETUBEX3START
       DOUBLE PRECISION FORMINUSX2SOURCETUBEX1START
       DOUBLE PRECISION FORMINUSX2SOURCETUBEX3START
       DOUBLE PRECISION FORPLUSX1SOURCETUBEX2START
       DOUBLE PRECISION FORPLUSX1SOURCETUBEX3START
       DOUBLE PRECISION FORMINUSX1SOURCETUBEX2START
       DOUBLE PRECISION FORMINUSX1SOURCETUBEX3START
CCCCCCCCCCCCCCCCCCCCCCCCC
C     POWER DEPENDENCY (6 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC

      DOUBLE PRECISION MAGFACEPOWERX1MINUSSTART
      DOUBLE PRECISION MAGFACEPOWERX1PLUSSTART
      DOUBLE PRECISION MAGFACEPOWERX2MINUSSTART
      DOUBLE PRECISION MAGFACEPOWERX2PLUSSTART
      DOUBLE PRECISION MAGFACEPOWERX3MINUSSTART
      DOUBLE PRECISION MAGFACEPOWERX3PLUSSTART
CCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C    STARTING FOR BASE-WITH NO OPTIMIZATION
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCC
C      APERATURE (18 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC

       DOUBLE PRECISION A1START0
       DOUBLE PRECISION A2START0
       DOUBLE PRECISION A3START0
       DOUBLE PRECISION A4START0
       DOUBLE PRECISION A5START0
       DOUBLE PRECISION A6START0
       DOUBLE PRECISION A7START0
       DOUBLE PRECISION A8START0
       DOUBLE PRECISION A9START0
       DOUBLE PRECISION A10START0
       DOUBLE PRECISION A11START0
       DOUBLE PRECISION A12START0
       DOUBLE PRECISION A13START0
       DOUBLE PRECISION A14START0
       DOUBLE PRECISION A15START0
       DOUBLE PRECISION A16START0
       DOUBLE PRECISION A17START0
       DOUBLE PRECISION A18START0

CCCCCCCCCCCCCCCCCCCCCCCCC
C      SOURCETUBE (12 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC
       DOUBLE PRECISION FORPLUSX3SOURCETUBEX1START0
       DOUBLE PRECISION FORPLUSX3SOURCETUBEX2START0
       DOUBLE PRECISION FORMINUSX3SOURCETUBEX1START0
       DOUBLE PRECISION FORMINUSX3SOURCETUBEX2START0
       DOUBLE PRECISION FORPLUSX2SOURCETUBEX1START0
       DOUBLE PRECISION FORPLUSX2SOURCETUBEX3START0
       DOUBLE PRECISION FORMINUSX2SOURCETUBEX1START0
       DOUBLE PRECISION FORMINUSX2SOURCETUBEX3START0
       DOUBLE PRECISION FORPLUSX1SOURCETUBEX2START0
       DOUBLE PRECISION FORPLUSX1SOURCETUBEX3START0
       DOUBLE PRECISION FORMINUSX1SOURCETUBEX2START0
       DOUBLE PRECISION FORMINUSX1SOURCETUBEX3START0
CCCCCCCCCCCCCCCCCCCCCCCCC
C     POWER DEPENDENCY (6 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC

      DOUBLE PRECISION MAGFACEPOWERX1MINUSSTART0
      DOUBLE PRECISION MAGFACEPOWERX1PLUSSTART0
      DOUBLE PRECISION MAGFACEPOWERX2MINUSSTART0
      DOUBLE PRECISION MAGFACEPOWERX2PLUSSTART0
      DOUBLE PRECISION MAGFACEPOWERX3MINUSSTART0
      DOUBLE PRECISION MAGFACEPOWERX3PLUSSTART0
CCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCC
C    OUTPUT FILES
CCCCCCCCCCCCCCCCCCC

       OPEN(UNIT=55,FILE='GEN-STARTING-VALUES.dat',STATUS='UNKNOWN')
       OPEN(UNIT=86,FILE='GENETICOUTPUT.dat',STATUS='UNKNOWN')
       OPEN(UNIT=87,FILE='OPTIMA.dat',STATUS='UNKNOWN')
 
133   FORMAT(I6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6)
134   FORMAT(I6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6)
135   FORMAT(I6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6)


CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      THE SEED FOR THE RANDOM VARIABLE
C
C      IN EACH SUBROUTINE, THE RAND NUMBER NEEDS TO BE SET FOR CONSISTENCY
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      RANDOM NUMBER GENERATOR
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        IRNUM=2011
        RANDSEED=201
        RANDNUMBER=111.1D0
        DO I=1,RANDSEED
         CALL GETRAND(IRNUM,RANDNUMBER)
        ENDDO

CCCCCCCCCCCCCCCCCCCCCCCC
C   FOR A SINGLE RUN: NO OPTIMIZATION: OVERRIDE=1,(IF MOVIE WANTED),PRINTSCREEN=1
C   FOR OPTIMIZATION: OVERRIDE=0,PRINTSCREEN=0
CCCCCCCCCCCCCCCCCCCCCCCC

         PRINTSCREEN=0
         OVERRIDE=0
c         STOREDATA=0

CCCCCCCCCCCCCCC
C  RESTRICTED CHANGING BOUNDS
C  ALWAYS USE READPTOPTION 2
CCCCCCCCCCCCCCC

         RESTRICTED=1
         READAPTOPTION=2
         GAPLIMIT=0.000001D0

CCCCCCCCCCCCCCCCCCC
C      THE WEIGHTS
CCCCCCCCCCCCCCCCCCC
       
       DESWEIGHT(1)=1.0D0
c       DESWEIGHT(2)=0.01D0
c       DESWEIGHT(3)=1.0D0
c       DESWEIGHT(4)=1.0D0


CCCCCCCCCCCCCCCCCCC
C      THE DESIGN EXPONENTS
CCCCCCCCCCCCCCCCCCC
       
       DESEXPO(1)=1.0D0
c       DESEXPO(2)=1.0D0
c       DESEXPO(3)=1.0D0
c       DESEXPO(4)=1.0D0


CCCCCCCCCCCCCCCCCCC
C      THE STOPPING TOLERANCE
CCCCCCCCCCCCCCCCCCC

       STOPTOL=0.0001D0

CCCCCCCCCCCCCCCCCCC
C      THE SPECIFIED OBJECTIVES
CCCCCCCCCCCCCCCCCCC

       DESIRED(1)=0.0D0
c       DESIRED(2)=0.0D0

CCCCCCCCCCCCCCCCC
C      BASELINE DESIGN PARAMETERS
C      FOR SINGLE RUN OVERRIDES
CCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCC
C      BEAM SPREAD (18 parameters)
CCCCCCCCCCCCCCCCCC
        A1START0=0.5D0
        A2START0=0.5D0
        A3START0=0.5D0
        A4START0=0.5D0
        A5START0=0.5D0
        A6START0=0.5D0
        A7START0=0.5D0
        A8START0=0.5D0
        A9START0=0.5D0
        A10START0=0.5D0
        A11START0=0.5D0
        A12START0=0.5D0
        A13START0=0.5D0
        A14START0=0.5D0
        A15START0=0.5D0
        A16START0=0.5D0
        A17START0=0.5D0
        A18START0=0.5D0
CCCCCCCCCCCCCCCCCCCCCCCCC
C      SOURCETUBE (12 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC
        FORPLUSX3SOURCETUBEX1START0=3.0D0
        FORPLUSX3SOURCETUBEX2START0=0.5D0
        FORMINUSX3SOURCETUBEX1START0=3.0D0
        FORMINUSX3SOURCETUBEX2START0=0.5D0
        FORPLUSX2SOURCETUBEX1START0=3.0D0
        FORPLUSX2SOURCETUBEX3START0=0.5D0
        FORMINUSX2SOURCETUBEX1START0=3.0D0
        FORMINUSX2SOURCETUBEX3START0=0.5D0
        FORPLUSX1SOURCETUBEX2START0=0.5D0
        FORPLUSX1SOURCETUBEX3START0=0.5D0
        FORMINUSX1SOURCETUBEX2START0=0.5D0
        FORMINUSX1SOURCETUBEX3START0=0.5D0
CCCCCCCCCCCCCCCCCCCCCCCCC
C     POWER DEPENDENCY (6 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC
       MAGFACEPOWERX1MINUSSTART0=10000000.0D0
       MAGFACEPOWERX1PLUSSTART0=10000000.0D0
       MAGFACEPOWERX2MINUSSTART0=10000000.0D0
       MAGFACEPOWERX2PLUSSTART0=10000000.0D0
       MAGFACEPOWERX3MINUSSTART0=10000000.0D0
       MAGFACEPOWERX3PLUSSTART0=10000000.0D0

CCCCCCCCCCCCCCCCCCC
C      RE-ADAPTION
CCCCCCCCCCCCCCCCCCC

       READAPT=1
       READAPTCYCLE=10
       READAPTINCREMENT=0.05D0

CCCCCCCCCCCCCCCCCCC
C      THE NUMBER OF  DESIGN VARIABLES
CCCCCCCCCCCCCCCCCCC

       N=36

CCCCCCCCCCCCCCCCCCC
C      THE LIMIT ON THE NUMBER OF GENERATIONS
CCCCCCCCCCCCCCCCCCC

       LIMIT=150

CCCCCCCCCCCCCCCCCCC
C      THE POPULATION SIZE
CCCCCCCCCCCCCCCCCCC

       POPULATION=24

CCCCCCCCCCCCCCCCCCC
C      THE SIZE OF THE RANDOM VARIABLES
CCCCCCCCCCCCCCCCCCC

       A=1.0D0

CCCCCCCCCCCCCCCCCCC
C      THE SIZE OF THE FUZZINESS OF THE LIMITS
CCCCCCCCCCCCCCCCCCC

       B=0.5D0

CCCCCCCCCCCCCCCCCCC
C       THE NUMBER OF TOP PARENT GENES TO KEEP GOING FORWARD (EVEN NUMBER)
CCCCCCCCCCCCCCCCCCC

       TOP=6

CCCCCCCCCCCCCCCCCCC
C       THE NUMBER OF TOP CHILDREN GENES TO KEEP GOING FORWARD
C       SHOULD BE EQUAL"TOP"
CCCCCCCCCCCCCCCCCCC

       CHILDREN=TOP

CCCCCCCCCCCCCCCCCCC
C       THE NUMBER OF GENES TO AVERAGE OVER FOR A MEASURE OF OVERALL FITNESS
CCCCCCCCCCCCCCCCCCC

       TOP2=POPULATION

CCCCCCCCCCCCCCCCCCC
C       THE NUMBER OF GENES TO PRINT OUT
CCCCCCCCCCCCCCCCCCC

       TOP3=POPULATION

CCCCCCCCCCCCCCCCCCC
C       IF KEEPING THE PARENTS KEEP=1
CCCCCCCCCCCCCCCCCCC

       KEEP=1

CCCCCCCCCCCCCCCCCCC
C      THE SEED FOR THE RANDOM VARIABLE
CCCCCCCCCCCCCCCCCCC

c       RANDSEED=201

CCCCCCCCCCCCCCCCCCC
C      OPTION TO USE THE AVERAGE OVER THE TOP GENES AS THE COST
CCCCCCCCCCCCCCCCCCC

       AVOPTION=1

CCCCCCCCCCCCCCCCCCC
C      THE UPPER AND LOWER BOUNDS FOR SEARCH
CCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      THE MAX'S
CCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCC
C      BASELINE DESIGN PARAMETERS
C      FOR SINGLE RUN OVERRIDES
CCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCC
C      BEAM SPREAD (18 parameters)
CCCCCCCCCCCCCCCCCC

        A1MAX=1.0D0
        A2MAX=1.0D0
        A3MAX=1.0D0
        A4MAX=1.0D0
        A5MAX=1.0D0
        A6MAX=1.0D0
        A7MAX=1.0D0
        A8MAX=1.0D0
        A9MAX=1.0D0
        A10MAX=1.0D0
        A11MAX=1.0D0
        A12MAX=1.0D0
        A13MAX=1.0D0
        A14MAX=1.0D0
        A15MAX=1.0D0
        A16MAX=1.0D0
        A17MAX=1.0D0
        A18MAX=1.0D0

CCCCCCCCCCCCCCCCCCCCCCCCC
C      SOURCETUBE (12 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC

        FORPLUSX3SOURCETUBEX1MAX=3.0D0
        FORPLUSX3SOURCETUBEX2MAX=0.5D0
        FORMINUSX3SOURCETUBEX1MAX=3.0D0
        FORMINUSX3SOURCETUBEX2MAX=0.5D0
        FORPLUSX2SOURCETUBEX1MAX=3.0D0
        FORPLUSX2SOURCETUBEX3MAX=0.5D0
        FORMINUSX2SOURCETUBEX1MAX=3.0D0
        FORMINUSX2SOURCETUBEX3MAX=0.5D0
        FORPLUSX1SOURCETUBEX2MAX=0.5D0
        FORPLUSX1SOURCETUBEX3MAX=0.5D0
        FORMINUSX1SOURCETUBEX2MAX=0.5D0
        FORMINUSX1SOURCETUBEX3MAX=0.5D0

CCCCCCCCCCCCCCCCCCCCCCCCC
C     POWER DEPENDENCY (6 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC

       MAGFACEPOWERX1MINUSMAX=10000000.0D0
       MAGFACEPOWERX1PLUSMAX=10000000.0D0
       MAGFACEPOWERX2MINUSMAX=10000000.0D0
       MAGFACEPOWERX2PLUSMAX=10000000.0D0
       MAGFACEPOWERX3MINUSMAX=10000000.0D0
       MAGFACEPOWERX3PLUSMAX=10000000.0D0

CCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      THE MIN'S
CCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCC
C      BASELINE DESIGN PARAMETERS
C      FOR SINGLE RUN OVERRIDES
CCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCC
C      BEAM SPREAD (18 parameters)
CCCCCCCCCCCCCCCCCC

        A1MIN=0.0D0
        A2MIN=0.0D0
        A3MIN=0.0D0
        A4MIN=0.0D0
        A5MIN=0.0D0
        A6MIN=0.0D0
        A7MIN=0.0D0
        A8MIN=0.0D0
        A9MIN=0.0D0
        A10MIN=0.0D0
        A11MIN=0.0D0
        A12MIN=0.0D0
        A13MIN=0.0D0
        A14MIN=0.0D0
        A15MIN=0.0D0
        A16MIN=0.0D0
        A17MIN=0.0D0
        A18MIN=0.0D0

CCCCCCCCCCCCCCCCCCCCCCCCC
C      SOURCETUBE (12 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC

        FORPLUSX3SOURCETUBEX1MIN=0.0D0
        FORPLUSX3SOURCETUBEX2MIN=0.0D0
        FORMINUSX3SOURCETUBEX1MIN=0.0D0
        FORMINUSX3SOURCETUBEX2MIN=0.0D0
        FORPLUSX2SOURCETUBEX1MIN=0.0D0
        FORPLUSX2SOURCETUBEX3MIN=0.0D0
        FORMINUSX2SOURCETUBEX1MIN=0.0D0
        FORMINUSX2SOURCETUBEX3MIN=0.0D0
        FORPLUSX1SOURCETUBEX2MIN=0.0D0
        FORPLUSX1SOURCETUBEX3MIN=0.0D0
        FORMINUSX1SOURCETUBEX2MIN=0.0D0
        FORMINUSX1SOURCETUBEX3MIN=0.0D0

CCCCCCCCCCCCCCCCCCCCCCCCC
C     POWER DEPENDENCY (6 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC

       MAGFACEPOWERX1MINUSMIN=1000000.0D0
       MAGFACEPOWERX1PLUSMIN=1000000.0D0
       MAGFACEPOWERX2MINUSMIN=1000000.0D0
       MAGFACEPOWERX2PLUSMIN=1000000.0D0
       MAGFACEPOWERX3MINUSMIN=1000000.0D0
       MAGFACEPOWERX3PLUSMIN=1000000.0D0

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     THE UPPER AND LOWER BOUNDS
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        UPBOUND(1)=A1MAX
        UPBOUND(2)=A2MAX
        UPBOUND(3)=A3MAX
        UPBOUND(4)=A4MAX
        UPBOUND(5)=A5MAX
        UPBOUND(6)=A6MAX
        UPBOUND(7)=A7MAX
        UPBOUND(8)=A8MAX
        UPBOUND(9)=A9MAX
        UPBOUND(10)=A10MAX
        UPBOUND(11)=A11MAX
        UPBOUND(12)=A12MAX
        UPBOUND(13)=A13MAX
        UPBOUND(14)=A14MAX
        UPBOUND(15)=A15MAX
        UPBOUND(16)=A16MAX
        UPBOUND(17)=A17MAX
        UPBOUND(18)=A18MAX
        UPBOUND(19)=FORPLUSX3SOURCETUBEX1MAX
        UPBOUND(20)=FORPLUSX3SOURCETUBEX2MAX
        UPBOUND(21)=FORMINUSX3SOURCETUBEX1MAX
        UPBOUND(22)=FORMINUSX3SOURCETUBEX2MAX
        UPBOUND(23)=FORPLUSX2SOURCETUBEX1MAX
        UPBOUND(24)=FORPLUSX2SOURCETUBEX3MAX
        UPBOUND(25)=FORMINUSX2SOURCETUBEX1MAX
        UPBOUND(26)=FORMINUSX2SOURCETUBEX3MAX
        UPBOUND(27)=FORPLUSX1SOURCETUBEX2MAX
        UPBOUND(28)=FORPLUSX1SOURCETUBEX3MAX
        UPBOUND(29)=FORMINUSX1SOURCETUBEX2MAX
        UPBOUND(30)=FORMINUSX1SOURCETUBEX3MAX
        UPBOUND(31)=MAGFACEPOWERX1MINUSMAX
        UPBOUND(32)=MAGFACEPOWERX1PLUSMAX
        UPBOUND(33)=MAGFACEPOWERX2MINUSMAX
        UPBOUND(34)=MAGFACEPOWERX2PLUSMAX
        UPBOUND(35)=MAGFACEPOWERX3MINUSMAX
        UPBOUND(36)=MAGFACEPOWERX3PLUSMAX


        LOWBOUND(1)=A1MIN
        LOWBOUND(2)=A2MIN
        LOWBOUND(3)=A3MIN
        LOWBOUND(4)=A4MIN
        LOWBOUND(5)=A5MIN
        LOWBOUND(6)=A6MIN
        LOWBOUND(7)=A7MIN
        LOWBOUND(8)=A8MIN
        LOWBOUND(9)=A9MIN
        LOWBOUND(10)=A10MIN
        LOWBOUND(11)=A11MIN
        LOWBOUND(12)=A12MIN
        LOWBOUND(13)=A13MIN
        LOWBOUND(14)=A14MIN
        LOWBOUND(15)=A15MIN
        LOWBOUND(16)=A16MIN
        LOWBOUND(17)=A17MIN
        LOWBOUND(18)=A18MIN
        LOWBOUND(19)=FORPLUSX3SOURCETUBEX1MIN
        LOWBOUND(20)=FORPLUSX3SOURCETUBEX2MIN
        LOWBOUND(21)=FORMINUSX3SOURCETUBEX1MIN
        LOWBOUND(22)=FORMINUSX3SOURCETUBEX2MIN
        LOWBOUND(23)=FORPLUSX2SOURCETUBEX1MIN
        LOWBOUND(24)=FORPLUSX2SOURCETUBEX3MIN
        LOWBOUND(25)=FORMINUSX2SOURCETUBEX1MIN
        LOWBOUND(26)=FORMINUSX2SOURCETUBEX3MIN
        LOWBOUND(27)=FORPLUSX1SOURCETUBEX2MIN
        LOWBOUND(28)=FORPLUSX1SOURCETUBEX3MIN
        LOWBOUND(29)=FORMINUSX1SOURCETUBEX2MIN
        LOWBOUND(30)=FORMINUSX1SOURCETUBEX3MIN
        LOWBOUND(31)=MAGFACEPOWERX1MINUSMIN
        LOWBOUND(32)=MAGFACEPOWERX1PLUSMIN
        LOWBOUND(33)=MAGFACEPOWERX2MINUSMIN
        LOWBOUND(34)=MAGFACEPOWERX2PLUSMIN
        LOWBOUND(35)=MAGFACEPOWERX3MINUSMIN
        LOWBOUND(36)=MAGFACEPOWERX3PLUSMIN
CCCCCCCCCCCCCCCCCCCCCCCCCCCC
C    HARD BOUND LIMITS
CCCCCCCCCCCCCCCCCCCCCCCCCCCC

       DO I=1,N
        UPBOUND0(I)=UPBOUND(I)
        LOWBOUND0(I)=LOWBOUND(I)
       ENDDO

CCCCCCCCCCCCCCCCCCC
C     THE STARTING VARIABLES
CCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCC
C      BEAM SPREAD (18 parameters)
CCCCCCCCCCCCCCCCCC

        A1START=0.5D0*(UPBOUND(1)+LOWBOUND(1))
        A2START=0.5D0*(UPBOUND(2)+LOWBOUND(2))
        A3START=0.5D0*(UPBOUND(3)+LOWBOUND(3))
        A4START=0.5D0*(UPBOUND(4)+LOWBOUND(4))
        A5START=0.5D0*(UPBOUND(5)+LOWBOUND(5))
        A6START=0.5D0*(UPBOUND(6)+LOWBOUND(6))
        A7START=0.5D0*(UPBOUND(7)+LOWBOUND(7))
        A8START=0.5D0*(UPBOUND(8)+LOWBOUND(8))
        A9START=0.5D0*(UPBOUND(9)+LOWBOUND(9))
        A10START=0.5D0*(UPBOUND(10)+LOWBOUND(10))
        A11START=0.5D0*(UPBOUND(11)+LOWBOUND(11))
        A12START=0.5D0*(UPBOUND(12)+LOWBOUND(12))
        A13START=0.5D0*(UPBOUND(13)+LOWBOUND(13))
        A14START=0.5D0*(UPBOUND(14)+LOWBOUND(14))
        A15START=0.5D0*(UPBOUND(15)+LOWBOUND(15))
        A16START=0.5D0*(UPBOUND(16)+LOWBOUND(16))
        A17START=0.5D0*(UPBOUND(17)+LOWBOUND(17))
        A18START=0.5D0*(UPBOUND(18)+LOWBOUND(18))
CCCCCCCCCCCCCCCCCCCCCCCCC
C      SOURCETUBE (12 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC
        FORPLUSX3SOURCETUBEX1START=0.5D0*(UPBOUND(19)+LOWBOUND(19))
        FORPLUSX3SOURCETUBEX2START=0.5D0*(UPBOUND(20)+LOWBOUND(20))
        FORMINUSX3SOURCETUBEX1START=0.5D0*(UPBOUND(21)+LOWBOUND(21))
        FORMINUSX3SOURCETUBEX2START=0.5D0*(UPBOUND(22)+LOWBOUND(22))
        FORPLUSX2SOURCETUBEX1START=0.5D0*(UPBOUND(23)+LOWBOUND(23))
        FORPLUSX2SOURCETUBEX3START=0.5D0*(UPBOUND(24)+LOWBOUND(24))
        FORMINUSX2SOURCETUBEX1START=0.5D0*(UPBOUND(25)+LOWBOUND(25))
        FORMINUSX2SOURCETUBEX3START=0.5D0*(UPBOUND(26)+LOWBOUND(26))
        FORPLUSX1SOURCETUBEX2START=0.5D0*(UPBOUND(27)+LOWBOUND(27))
        FORPLUSX1SOURCETUBEX3START=0.5D0*(UPBOUND(28)+LOWBOUND(28))
        FORMINUSX1SOURCETUBEX2START=0.5D0*(UPBOUND(29)+LOWBOUND(29))
        FORMINUSX1SOURCETUBEX3START=0.5D0*(UPBOUND(30)+LOWBOUND(30))
CCCCCCCCCCCCCCCCCCCCCCCCC
C     POWER DEPENDENCY (6 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC
       MAGFACEPOWERX1MINUSSTART=0.5D0*(UPBOUND(31)+LOWBOUND(31))
       MAGFACEPOWERX1PLUSSTART=0.5D0*(UPBOUND(32)+LOWBOUND(32))
       MAGFACEPOWERX2MINUSSTART=0.5D0*(UPBOUND(33)+LOWBOUND(33))
       MAGFACEPOWERX2PLUSSTART=0.5D0*(UPBOUND(34)+LOWBOUND(34))
       MAGFACEPOWERX3MINUSSTART=0.5D0*(UPBOUND(35)+LOWBOUND(35))
       MAGFACEPOWERX3PLUSSTART=0.5D0*(UPBOUND(36)+LOWBOUND(36))

CCCCCCCCCCCCCCCCCCC
C     THE BASE VALUES
CCCCCCCCCCCCCCCCCCC


CCCCCCCCCCCCCCCCCC
C      BEAM SPREAD (18 parameters)
CCCCCCCCCCCCCCCCCC
        BASE(1)=A1START
        BASE(2)=A2START
        BASE(3)=A3START
        BASE(4)=A4START
        BASE(5)=A5START
        BASE(6)=A6START
        BASE(7)=A7START
        BASE(8)=A8START
        BASE(9)=A9START
        BASE(10)=A10START
        BASE(11)=A11START
        BASE(12)=A12START
        BASE(13)=A13START
        BASE(14)=A14START
        BASE(15)=A15START
        BASE(16)=A16START
        BASE(17)=A17START
        BASE(18)=A18START
CCCCCCCCCCCCCCCCCCCCCCCCC
C      SOURCETUBE (12 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC
        BASE(19)=FORPLUSX3SOURCETUBEX1START
        BASE(20)=FORPLUSX3SOURCETUBEX2START
        BASE(21)=FORMINUSX3SOURCETUBEX1START
        BASE(22)=FORMINUSX3SOURCETUBEX2START
        BASE(23)=FORPLUSX2SOURCETUBEX1START
        BASE(24)=FORPLUSX2SOURCETUBEX3START
        BASE(25)=FORMINUSX2SOURCETUBEX1START
        BASE(26)=FORMINUSX2SOURCETUBEX3START
        BASE(27)=FORPLUSX1SOURCETUBEX2START
        BASE(28)=FORPLUSX1SOURCETUBEX3START
        BASE(29)=FORMINUSX1SOURCETUBEX2START
        BASE(30)=FORMINUSX1SOURCETUBEX3START
CCCCCCCCCCCCCCCCCCCCCCCCC
C     POWER DEPENDENCY (6 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC
       BASE(31)=MAGFACEPOWERX1MINUSSTART
       BASE(32)=MAGFACEPOWERX1PLUSSTART
       BASE(33)=MAGFACEPOWERX2MINUSSTART
       BASE(34)=MAGFACEPOWERX2PLUSSTART
       BASE(35)=MAGFACEPOWERX3MINUSSTART
       BASE(36)=MAGFACEPOWERX3PLUSSTART

CCCCCCCCCCCCCCCCCCC
C      THE ACTIVE VARIABLES
CCCCCCCCCCCCCCCCCCC
       
       ACTIVE(1)=1
       ACTIVE(2)=1
       ACTIVE(3)=1
       ACTIVE(4)=1
       ACTIVE(5)=1
       ACTIVE(6)=1
       ACTIVE(7)=1
       ACTIVE(8)=1
       ACTIVE(9)=1
       ACTIVE(10)=1
       ACTIVE(11)=1
       ACTIVE(12)=1
       ACTIVE(13)=1
       ACTIVE(14)=1
       ACTIVE(15)=1
       ACTIVE(16)=1
       ACTIVE(17)=1
       ACTIVE(18)=1
       ACTIVE(19)=1
       ACTIVE(20)=1
       ACTIVE(21)=1
       ACTIVE(22)=1
       ACTIVE(23)=1
       ACTIVE(24)=1
       ACTIVE(25)=1
       ACTIVE(26)=1
       ACTIVE(27)=1
       ACTIVE(28)=1
       ACTIVE(29)=1
       ACTIVE(30)=1
       ACTIVE(31)=1
       ACTIVE(32)=1
       ACTIVE(33)=1
       ACTIVE(34)=1
       ACTIVE(35)=1
       ACTIVE(36)=1

C WRITE(*,*)'SURVIVAL OF THE FITTEST ALGORITHM'

      DESPOTENTIAL=10000000000.0D0

CCCCCCCCCCCCCCCCCCCCCCCC
C     OVERRIDING VALUES
CCCCCCCCCCCCCCCCCCCCCCCC

      IF(OVERRIDE .EQ. 1)THEN


! CCCCCCCCCCCCCCCCCC
! C      BEAM SPREAD (18 parameters)
! CCCCCCCCCCCCCCCCCC
!         BASE(1)=A1START0
!         BASE(2)=A2START0
!         BASE(3)=A3START0
!         BASE(4)=A4START0
!         BASE(5)=A5START0
!         BASE(6)=A6START0
!         BASE(7)=A7START0
!         BASE(8)=A8START0
!         BASE(9)=A9START0
!         BASE(10)=A10START0
!         BASE(11)=A11START0
!         BASE(12)=A12START0
!         BASE(13)=A13START0
!         BASE(14)=A14START0
!         BASE(15)=A15START0
!         BASE(16)=A16START0
!         BASE(17)=A17START0
!         BASE(18)=A18START0
! CCCCCCCCCCCCCCCCCCCCCCCCC
! C      SOURCETUBE (12 parameters)
! CCCCCCCCCCCCCCCCCCCCCCCCC
!         BASE(19)=FORPLUSX3SOURCETUBEX1START0
!         BASE(20)=FORPLUSX3SOURCETUBEX2START0
!         BASE(21)=FORMINUSX3SOURCETUBEX1START0
!         BASE(22)=FORMINUSX3SOURCETUBEX2START0
!         BASE(23)=FORPLUSX2SOURCETUBEX1START0
!         BASE(24)=FORPLUSX2SOURCETUBEX3START0
!         BASE(25)=FORMINUSX2SOURCETUBEX1START0
!         BASE(26)=FORMINUSX2SOURCETUBEX3START0
!         BASE(27)=FORPLUSX1SOURCETUBEX2START0
!         BASE(28)=FORPLUSX1SOURCETUBEX3START0
!         BASE(29)=FORMINUSX1SOURCETUBEX2START0
!         BASE(30)=FORMINUSX1SOURCETUBEX3START0
! CCCCCCCCCCCCCCCCCCCCCCCCC
! C     POWER DEPENDENCY (6 parameters)
! CCCCCCCCCCCCCCCCCCCCCCCCC
!        BASE(31)=MAGFACEPOWERX1MINUSSTART0
!        BASE(32)=MAGFACEPOWERX1PLUSSTART0
!        BASE(33)=MAGFACEPOWERX2MINUSSTART0
!        BASE(34)=MAGFACEPOWERX2PLUSSTART0
!        BASE(35)=MAGFACEPOWERX3MINUSSTART0
!        BASE(36)=MAGFACEPOWERX3PLUSSTART0

CCCCCCCCCCCCCCCCCCCCCCCC GA BEST DESIGN PARAMETERS CCCCCCCCCCCCCCCCCCCCCCCCCC


CCCCCCCCCCCCCCCCCC
C      BEAM SPREAD (18 parameters)
CCCCCCCCCCCCCCCCCC
        BASE(1)=0.566790D0
        BASE(2)=0.107683D0
        BASE(3)=0.174475D0
        BASE(4)=0.636496D0
        BASE(5)=0.215733D0
        BASE(6)=0.195423D0
        BASE(7)=0.515307D0
        BASE(8)=0.251739D0
        BASE(9)=0.421156D0
        BASE(10)=0.740410D0
        BASE(11)=0.416287D0
        BASE(12)=0.578356D0
        BASE(13)=0.586021D0
        BASE(14)=0.393860D0
        BASE(15)=0.197936D0
        BASE(16)=0.597078D0
        BASE(17)=0.690145D0
        BASE(18)=0.199086D0
CCCCCCCCCCCCCCCCCCCCCCCCC
C      SOURCETUBE (12 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC

        BASE(19)=1.908733D0
        BASE(20)=0.207362D0
        BASE(21)=1.691644D0
        BASE(22)=0.295097D0
        BASE(23)=0.326440D0
        BASE(24)=0.327684D0
        BASE(25)=0.913640D0
        BASE(26)=0.334437D0
        BASE(27)=0.119917D0
        BASE(28)=0.282774D0
        BASE(29)=0.214931D0
        BASE(30)=0.359765D0
CCCCCCCCCCCCCCCCCCCCCCCCC
C     POWER DEPENDENCY (6 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC

        BASE(31)=5660545.216791D0
        BASE(32)=5683012.004730D0
        BASE(33)=7224669.407077D0
        BASE(34)=6288994.960493D0
        BASE(35)=3279214.234650D0
        BASE(36)=4027783.567187D0



CCCCCCCCCCCCCCCCCCC
C      THE ACTIVE VARIABLES
CCCCCCCCCCCCCCCCCCC
       
       ACTIVE(1)=0
       ACTIVE(2)=0
       ACTIVE(3)=0
       ACTIVE(4)=0
       ACTIVE(5)=0
       ACTIVE(6)=0
       ACTIVE(7)=0
       ACTIVE(8)=0
       ACTIVE(9)=0
       ACTIVE(10)=0
       ACTIVE(11)=0
       ACTIVE(12)=0
       ACTIVE(13)=0
       ACTIVE(14)=0
       ACTIVE(15)=0
       ACTIVE(16)=0
       ACTIVE(17)=0
       ACTIVE(18)=0
       ACTIVE(19)=0
       ACTIVE(20)=0
       ACTIVE(21)=0
       ACTIVE(22)=0
       ACTIVE(23)=0
       ACTIVE(24)=0
       ACTIVE(25)=0
       ACTIVE(26)=0
       ACTIVE(27)=0
       ACTIVE(28)=0
       ACTIVE(29)=0
       ACTIVE(30)=0
       ACTIVE(31)=0
       ACTIVE(32)=0
       ACTIVE(33)=0
       ACTIVE(34)=0
       ACTIVE(35)=0
       ACTIVE(36)=0


       LIMIT=1
       POPULATION=1
c       RANDSEED=201
       STOPTOL=0.99D0*DESPOTENTIAL
C WRITE(*,*)'OVERRIDING THE SEARCH'

         TOP=1
         TOP2=1
         TOP3=1

      ENDIF
 
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      RANDOM NUMBER GENERATOR
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

c        IRNUM=2011
c        RANDNUMBER=111.1D0
c        DO I=1,RANDSEED
c         CALL GETRAND(IRNUM,RANDNUMBER)
c        ENDDO

C****************************************************
C       GENERATING A POPULATION
C****************************************************
    
        DO I1=1,POPULATION
         NOFLAG(I1)=0
         DO I2=1,N
          CALL GETRAND(IRNUM,RANDNUMBER)
        STRING(I1,I2)=RANDNUMBER*(UPBOUND(I2)-LOWBOUND(I2))+LOWBOUND(I2)
        IF(STRING(I1,I2) .LT. LOWBOUND(I2))THEN
         STRING(I1,I2)=LOWBOUND(I2)
        ENDIF
        IF(STRING(I1,I2) .GT. UPBOUND(I2))THEN
         STRING(I1,I2)=UPBOUND(I2)
        ENDIF
         ENDDO
         DO I2=1,N
          IF(ACTIVE(I2) .LE. 0.5)THEN
           STRING(I1,I2)=BASE(I2)
          ENDIF
         ENDDO
        ENDDO

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C       PRINTING COMMANDS (FOR UP TO 25 DESIGN VARIABLES)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

C        WRITE(*,*)'***********************************'
C        WRITE(*,*)POPULATION,'  GENES IN THE POOL'
C        WRITE(*,*)'***********************************'
C        WRITE(*,*)'THE ORIGINAL GENETIC STRINGS-FIRST SET:'
C        WRITE(*,*)'***********************************'
        DO I1=1,TOP3
        WRITE(*,134)I1,STRING(I1,1),STRING(I1,2),STRING(I1,3),
     $STRING(I1,4),STRING(I1,5),STRING(I1,6),STRING(I1,7),STRING(I1,8),
     $STRING(I1,9),STRING(I1,10)
        ENDDO
C        WRITE(*,*)'***********************************'
C        WRITE(*,*)'THE ORIGINAL GENETIC STRINGS-SECOND SET:'
C        WRITE(*,*)'***********************************'
        DO I1=1,TOP3
         WRITE(*,135)I1,STRING(I1,11),STRING(I1,12),
     $STRING(I1,13),STRING(I1,14),STRING(I1,15),STRING(I1,16),
     $STRING(I1,17),STRING(I1,18),STRING(I1,19),STRING(I1,20)
        ENDDO
C        WRITE(*,*)'***********************************'
C        WRITE(*,*)'THE ORIGINAL GENETIC STRINGS-THIRD SET:'
C        WRITE(*,*)'***********************************'
        DO I1=1,TOP3
         WRITE(*,135)I1,STRING(I1,21),STRING(I1,22),
     $STRING(I1,23),STRING(I1,24),STRING(I1,25),STRING(I1,26),
     $STRING(I1,27),STRING(I1,28),STRING(I1,29),STRING(I1,30)
        ENDDO
C        WRITE(*,*)'***********************************'
C        WRITE(*,*)'THE ORIGINAL GENETIC STRINGS-FOURTH SET:'
C        WRITE(*,*)'***********************************'
        DO I1=1,TOP3
         WRITE(*,135)I1,STRING(I1,31),STRING(I1,32),
     $STRING(I1,33),STRING(I1,34),STRING(I1,35),STRING(I1,36)
        ENDDO

C****************************************************
C        DETERMINING THEIR FITNESSES
C****************************************************

        GENERATION=0
        LASTREADAPT=0
        DO WHILE (GENERATION .LT. LIMIT .AND. DESPOTENTIAL
     $.GT. STOPTOL)
         GENERATION=GENERATION+1
         LASTREADAPT=LASTREADAPT+1

         DO I1=1,POPULATION
          FLAG(I1)=0
         ENDDO

C****************************************************
C     EVALUATIONS
C****************************************************

        DO I0=1,POPULATION
         WRITE(*,*)'GENERATION,STRING=',GENERATION,I0
         IF(NOFLAG(I0) .EQ. 1)THEN
C          WRITE(*,*)'RETAINED PARENT-NO NEED TO RECOMPUTE'
         ENDIF
         IF(NOFLAG(I0) .EQ. 0)THEN
         DO I2=1,N
           TPARA(I2)=STRING(I0,I2)
         ENDDO
C         WRITE(*,*)'SENDING'

C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
      CALL   PASS(TPARA,DESPOTENTIAL,DESIRED,DESWEIGHT,DESEXPO,
     $DESCOST,OVERRIDE,PRINTSCREEN,GENERATION)
C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

C         WRITE(*,*)'RECEIVING'
         FITNESS(I0)=DESPOTENTIAL
         ENDIF
        ENDDO

C****************************************************
C      RANKING THE GENE FITNESSES
C****************************************************
        
         COUNT=0
         DO WHILE(COUNT .LT. POPULATION)
         LARGEST=1000000000000.0D0
         DO I1=1,POPULATION
          IF((FITNESS(I1) .LE. LARGEST) .AND. (FLAG(I1) .NE. 1))THEN
           LARGEST=FITNESS(I1)
           MINIMUM=I1
          ENDIF
         ENDDO
         COUNT=COUNT+1
         RANK(MINIMUM)=COUNT
         FLAG(MINIMUM)=1
         ENDDO

C****************************************************
C      REORDERING THE POPULATION
C****************************************************

         DO I1=1,POPULATION
          DO I2=1,N
            TEMPSTRING(RANK(I1),I2)=STRING(I1,I2)
          ENDDO
          TEMPFITNESS(RANK(I1))=FITNESS(I1)
         ENDDO

C        WRITE(*,*)'TOP MOST FIT GENETICSTRINGS+PLUS COST:'
        DO I1=1,TOP3
       WRITE(*,134)I1,TEMPSTRING(I1,1),TEMPSTRING(I1,2),
     $TEMPSTRING(I1,3),TEMPSTRING(I1,4),
     $TEMPSTRING(I1,5),TEMPSTRING(I1,6),
     $TEMPSTRING(I1,7),TEMPSTRING(I1,8),
     $TEMPSTRING(I1,9),TEMPSTRING(I1,10),
     $TEMPSTRING(I1,11),TEMPSTRING(I1,12),
     $TEMPSTRING(I1,13),TEMPSTRING(I1,14),
     $TEMPSTRING(I1,15),TEMPSTRING(I1,16),
     $TEMPSTRING(I1,17),TEMPSTRING(I1,18),
     $TEMPSTRING(I1,19),TEMPSTRING(I1,20),
     $TEMPSTRING(I1,21),TEMPSTRING(I1,22),
     $TEMPSTRING(I1,23),TEMPSTRING(I1,24),
     $TEMPSTRING(I1,25),TEMPSTRING(I1,26),
     $TEMPSTRING(I1,27),TEMPSTRING(I1,28),
     $TEMPSTRING(I1,29),TEMPSTRING(I1,30),
     $TEMPSTRING(I1,31),TEMPSTRING(I1,32),
     $TEMPSTRING(I1,33),TEMPSTRING(I1,34),
     $TEMPSTRING(I1,35),TEMPSTRING(I1,36),
     $TEMPFITNESS(I1)

       WRITE(87,134)I1,TEMPSTRING(I1,1),TEMPSTRING(I1,2),
     $TEMPSTRING(I1,3),TEMPSTRING(I1,4),
     $TEMPSTRING(I1,5),TEMPSTRING(I1,6),
     $TEMPSTRING(I1,7),TEMPSTRING(I1,8),
     $TEMPSTRING(I1,9),TEMPSTRING(I1,10),
     $TEMPSTRING(I1,11),TEMPSTRING(I1,12),
     $TEMPSTRING(I1,13),TEMPSTRING(I1,14),
     $TEMPSTRING(I1,15),TEMPSTRING(I1,16),
     $TEMPSTRING(I1,17),TEMPSTRING(I1,18),
     $TEMPSTRING(I1,19),TEMPSTRING(I1,20),
     $TEMPSTRING(I1,21),TEMPSTRING(I1,22),
     $TEMPSTRING(I1,23),TEMPSTRING(I1,24),
     $TEMPSTRING(I1,25),TEMPSTRING(I1,26),
     $TEMPSTRING(I1,27),TEMPSTRING(I1,28),
     $TEMPSTRING(I1,29),TEMPSTRING(I1,30),
     $TEMPSTRING(I1,31),TEMPSTRING(I1,32),
     $TEMPSTRING(I1,33),TEMPSTRING(I1,34),
     $TEMPSTRING(I1,35),TEMPSTRING(I1,36),
     $TEMPFITNESS(I1)
        ENDDO

        AVFITNESS=0.0D0
        DO I1=1,TOP2
         AVFITNESS=AVFITNESS+TEMPFITNESS(I1)
        ENDDO
        RTOP2=TOP2

        DO I2=1,N
         TPARA(I2)=TEMPSTRING(1,I2)
        ENDDO

C****************************************************
C      THE BEST GENE EMERGES
C****************************************************

C         WRITE(*,*)'SENDING FOR THE BEST GENE'

C        WRITE(*,*)'TOP MOST FIT GENETICS STRINGS:'
C        WRITE(*,*)TPARA(1),TPARA(2),
C     $TPARA(3),TPARA(4),
C     $TPARA(5),TPARA(6),
C     $TPARA(7),TPARA(8),
C     $TPARA(9),TPARA(10),
C     $TPARA(11),TPARA(12),
C     $TPARA(13),TPARA(14),
C     $TPARA(15),TPARA(16),
C     $TPARA(17),TPARA(18),
C     $TPARA(19),TPARA(20),
C     $TPARA(21),TPARA(22),
C     $TPARA(23),TPARA(24),
C     $TPARA(25),TPARA(26),
C     $TPARA(27),TPARA(28),
C     $TPARA(29),TPARA(30),
C     $TPARA(31),TPARA(32),
C     $TPARA(33),TPARA(34),
C     $TPARA(35),TPARA(36)

C        WRITE(*,*)'RECEIVING INFO FOR THE BEST GENE'
C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
      CALL PASS(TPARA,DESPOTENTIAL,DESIRED,DESWEIGHT,DESEXPO,
     $DESCOST,OVERRIDE,PRINTSCREEN,GENERATION)
C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
C        WRITE(*,*)'DELIVERS THIS COST=',DESPOTENTIAL


C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'GENERATION NUMBER:',GENERATION
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'BEST GENE DELIVERS THE FOLLOWING RESPONSE:'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 1=',TEMPSTRING(1,1)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 2=',TEMPSTRING(1,2)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 3=',TEMPSTRING(1,3)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 4=',TEMPSTRING(1,4)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 5=',TEMPSTRING(1,5)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 6=',TEMPSTRING(1,6)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 7=',TEMPSTRING(1,7)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 8=',TEMPSTRING(1,8)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 9=',TEMPSTRING(1,9)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 10=',TEMPSTRING(1,10)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 11=',TEMPSTRING(1,11)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 12=',TEMPSTRING(1,12)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 13=',TEMPSTRING(1,13)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 14=',TEMPSTRING(1,14)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 15=',TEMPSTRING(1,15)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 16=',TEMPSTRING(1,16)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 17=',TEMPSTRING(1,17)
C        WRITE(*,*)'***************************************'
C       WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 18=',TEMPSTRING(1,18)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 19=',TEMPSTRING(1,19)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 20=',TEMPSTRING(1,20)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 21=',TEMPSTRING(1,21)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 22=',TEMPSTRING(1,22)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 23=',TEMPSTRING(1,23)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 24=',TEMPSTRING(1,24)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 25=',TEMPSTRING(1,25)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 26=',TEMPSTRING(1,26)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 27=',TEMPSTRING(1,27)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 28=',TEMPSTRING(1,28)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 29=',TEMPSTRING(1,29)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 30=',TEMPSTRING(1,30)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 31=',TEMPSTRING(1,31)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 32=',TEMPSTRING(1,32)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 33=',TEMPSTRING(1,33)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 34=',TEMPSTRING(1,34)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 35=',TEMPSTRING(1,35)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'PARAMETER 36=',TEMPSTRING(1,36)
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'***************************************'
C        WRITE(86,133)GENERATION,TEMPFITNESS(1),AVFITNESS/RTOP2
C        WRITE(*,*)'***************************************'
C        WRITE(*,*)'STATS:GENERATION,TOPFITNESS,AVFITNESS='
C        WRITE(*,*)GENERATION,TEMPFITNESS(1),AVFITNESS/RTOP2
C        WRITE(*,*)'***************************************'

        WRITE(55,*)'GENERATION NUMBER:',GENERATION
        WRITE(55,*)'PARAMETER 1=',TEMPSTRING(1,1)
        WRITE(55,*)'PARAMETER 2=',TEMPSTRING(1,2)
       WRITE(55,*)'PARAMETER 3=',TEMPSTRING(1,3)
        WRITE(55,*)'PARAMETER 4=',TEMPSTRING(1,4)
        WRITE(55,*)'PARAMETER 5=',TEMPSTRING(1,5)
        WRITE(55,*)'PARAMETER 6=',TEMPSTRING(1,6)
        WRITE(55,*)'PARAMETER 7=',TEMPSTRING(1,7)
        WRITE(55,*)'PARAMETER 8=',TEMPSTRING(1,8)
        WRITE(55,*)'PARAMETER 9=',TEMPSTRING(1,9)
        WRITE(55,*)'PARAMETER 10=',TEMPSTRING(1,10)
        WRITE(55,*)'PARAMETER 11=',TEMPSTRING(1,11)
        WRITE(55,*)'PARAMETER 12=',TEMPSTRING(1,12)
        WRITE(55,*)'PARAMETER 13=',TEMPSTRING(1,13)
        WRITE(55,*)'PARAMETER 14=',TEMPSTRING(1,14)
        WRITE(55,*)'PARAMETER 15=',TEMPSTRING(1,15)
        WRITE(55,*)'PARAMETER 16=',TEMPSTRING(1,16)
        WRITE(55,*)'PARAMETER 17=',TEMPSTRING(1,17)
        WRITE(55,*)'PARAMETER 18=',TEMPSTRING(1,18)
        WRITE(55,*)'PARAMETER 19=',TEMPSTRING(1,19)
        WRITE(55,*)'PARAMETER 20=',TEMPSTRING(1,20)
        WRITE(55,*)'PARAMETER 21=',TEMPSTRING(1,21)
        WRITE(55,*)'PARAMETER 22=',TEMPSTRING(1,22)
       WRITE(55,*)'PARAMETER 23=',TEMPSTRING(1,23)
        WRITE(55,*)'PARAMETER 24=',TEMPSTRING(1,24)
        WRITE(55,*)'PARAMETER 25=',TEMPSTRING(1,25)
        WRITE(55,*)'PARAMETER 26=',TEMPSTRING(1,26)
        WRITE(55,*)'PARAMETER 27=',TEMPSTRING(1,27)
        WRITE(55,*)'PARAMETER 28=',TEMPSTRING(1,28)
        WRITE(55,*)'PARAMETER 29=',TEMPSTRING(1,29)
        WRITE(55,*)'PARAMETER 30=',TEMPSTRING(1,30)
        WRITE(55,*)'PARAMETER 31=',TEMPSTRING(1,31)
        WRITE(55,*)'PARAMETER 32=',TEMPSTRING(1,32)
        WRITE(55,*)'PARAMETER 33=',TEMPSTRING(1,33)
        WRITE(55,*)'PARAMETER 34=',TEMPSTRING(1,34)
        WRITE(55,*)'PARAMETER 35=',TEMPSTRING(1,35)
        WRITE(55,*)'PARAMETER 36=',TEMPSTRING(1,36)

        DESPOTENTIAL=TEMPFITNESS(1)
        IF(AVOPTION .EQ. 1)THEN
         DESPOTENTIAL=AVFITNESS/RTOP2
        ENDIF

C****************************************************
C      MATING THE POPULATION, TWO BY TWO
C****************************************************

       DO I1=1,POPULATION-1,2

C****************************************************
C        FIRST OFFSPRING INCORPORATING MUTATIONS
C****************************************************

          DO I2=1,N
           CALL GETRAND(IRNUM,RANDNUMBER)
           PHI(I2)=A*RANDNUMBER
          ENDDO

          DO I2=1,N
           NEWSTRING(I1,I2)=PHI(I2)*TEMPSTRING(I1,I2)
     $+(1.0D0-PHI(I2))*TEMPSTRING(I1+1,I2)
          ENDDO
     
C****************************************************
C        SECOND OFFSPRING INCORPORATING MUTATIONS
C****************************************************

          DO I2=1,N
           CALL GETRAND(IRNUM,RANDNUMBER)
           PHI(I2)=A*RANDNUMBER
          ENDDO

          DO I2=1,N
           NEWSTRING(I1+1,I2)=PHI(I2)*TEMPSTRING(I1,I2)
     $+(1.0D0-PHI(I2))*TEMPSTRING(I1+1,I2)
          ENDDO

C****************************************************
C        KEEPING WITHIN THE BEHAVIORAL CONSTRAINTS
C****************************************************

         DO I2=1,N
          IF(NEWSTRING(I1,I2) .GT. UPBOUND(I2))THEN
           CALL GETRAND(IRNUM,RANDNUMBER)
           PHI(I2)=B*RANDNUMBER
           NEWSTRING(I1,I2)=(1.0D0-PHI(I2))*UPBOUND(I2)
     $+PHI(I2)*NEWSTRING(I1,I2)
c           NEWSTRING(I1,I2)=UPBOUND(I2)
          ENDIF
          IF(NEWSTRING(I1,I2) .LT. LOWBOUND(I2))THEN
           PHI(I2)=B*RANDNUMBER
           NEWSTRING(I1,I2)=(1.0D0-PHI(I2))*LOWBOUND(I2)
     $+PHI(I2)*NEWSTRING(I1,I2)
c           NEWSTRING(I1,I2)=LOWBOUND(I2)
          ENDIF
          IF(NEWSTRING(I1+1,I2) .GT. UPBOUND(I2))THEN
           PHI(I2)=B*RANDNUMBER
           NEWSTRING(I1+1,I2)=(1.0D0-PHI(I2))*UPBOUND(I2)
     $+PHI(I2)*NEWSTRING(I1+1,I2)
c           NEWSTRING(I1+1,I2)=UPBOUND(I2)
          ENDIF
          IF(NEWSTRING(I1+1,I2) .LT. LOWBOUND(I2))THEN
           PHI(I2)=B*RANDNUMBER
           NEWSTRING(I1+1,I2)=(1.0D0-PHI(I2))*LOWBOUND(I2)
     $+PHI(I2)*NEWSTRING(I1+1,I2)
c           NEWSTRING(I1+1,I2)=LOWBOUND(I2)
          ENDIF
         ENDDO
        ENDDO

C****************************************************************
C       ALLOWING THE TOP GENES TO PROCEED TO THE NEXT GENERATION
C****************************************************************

        DO I1=1,TOP
          DO I2=1,N
           OLDSTRING(I1,I2)=TEMPSTRING(I1,I2)
           STRING(I1,I2)=NEWSTRING(I1,I2)
          ENDDO
          OLDFITNESS(I1)=TEMPFITNESS(I1)
        ENDDO


C****************************************************************
C       INFLUX OF NEW GENETIC MATERIAL
C****************************************************************


      DO I1=1,POPULATION
       NOFLAG(I1)=0
      ENDDO

      IF(KEEP .EQ. 0)THEN
       DO I1=CHILDREN+1,POPULATION
        DO I2=1,N
        CALL GETRAND(IRNUM,RANDNUMBER)
        STRING(I1,I2)=RANDNUMBER*(UPBOUND(I2)-LOWBOUND(I2))+LOWBOUND(I2)
        ENDDO
        DO I2=1,N
         IF(ACTIVE(I2) .LE. 0.5)THEN
          STRING(I1,I2)=BASE(I2)
         ENDIF
        ENDDO
       ENDDO
      ENDIF

      IF(KEEP .EQ. 1)THEN

CCCCCCCCCCCCCC
C      SKIPPED THE CHILDREN
C      AND NOW SKIPPING PARENTS
CCCCCCCCCCCCCC
       
         DO I1=1,TOP
          DO I2=1,N
           STRING(I1+CHILDREN,I2)=OLDSTRING(I1,I2)
          ENDDO
         NOFLAG(I1+CHILDREN)=1
         FITNESS(I1+CHILDREN)=OLDFITNESS(I1)
        ENDDO

CCCCCCCCCCCCCC
C      NOW INCLUDING THE REST
CCCCCCCCCCCCCC

        DO I1=TOP+CHILDREN+1,POPULATION
         DO I2=1,N
          CALL GETRAND(IRNUM,RANDNUMBER)
          STRING(I1,I2)=RANDNUMBER*(UPBOUND(I2)-LOWBOUND(I2))
     $+LOWBOUND(I2)
          ENDDO
          DO I2=1,N
           IF(ACTIVE(I2) .LE. 0.5)THEN
            STRING(I1,I2)=BASE(I2)
           ENDIF
          ENDDO
        ENDDO
       ENDIF

C****************************************************************
C       READAPTING THE SEARCH INTERVAL
C****************************************************************

        IF(READAPT .EQ. 1)THEN
         IF(LASTREADAPT .GE. READAPTCYCLE)THEN
         DO I1=1,POPULATION
          NOFLAG(I1)=0
         ENDDO
C         WRITE(*,*)'FOR NEXT ROUND READAPTING SEARCH'
C         WRITE(*,*)'INTERVAL AROUND DESIGN VECTOR='
         DO I2=1,N
          WRITE(*,*)TEMPSTRING(1,I2)
         ENDDO

         IF(READAPTOPTION .EQ. 1)THEN
          DO I2=1,N
            GAP=READAPTINCREMENT*(UPBOUND(I2)-LOWBOUND(I2))
            UPBOUND(I2)=TEMPSTRING(1,I2)+GAP
            LOWBOUND(I2)=TEMPSTRING(1,I2)-GAP
          ENDDO
         ENDIF

         IF(READAPTOPTION .EQ. 2)THEN
          DO I2=1,N
          GAP=READAPTINCREMENT*DABS(TEMPSTRING(1,I2))
          IF(GAP .LE. GAPLIMIT)THEN
           GAP=GAPLIMIT
          ENDIF
          UPBOUND(I2)=TEMPSTRING(1,I2)+GAP
          LOWBOUND(I2)=TEMPSTRING(1,I2)-GAP
          ENDDO
         ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      SPECIAL CONSTRAINTS IF ANY ON THE BOUNDS
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC


       IF(RESTRICTED .EQ. 1)THEN
        DO I=1,N
         IF(UPBOUND(I) .GT. UPBOUND0(I))THEN
          UPBOUND(I)=UPBOUND0(I)
         ENDIF
         IF(LOWBOUND(I) .LT. LOWBOUND0(I))THEN
          LOWBOUND(I)=LOWBOUND0(I)
         ENDIF
        ENDDO
        ENDIF

         LASTREADAPT=0
         DO I1=1,POPULATION
          DO I2=1,N
           CALL GETRAND(IRNUM,RANDNUMBER)
           STRING(I1,I2)=RANDNUMBER*(UPBOUND(I2)-LOWBOUND(I2))
     $+LOWBOUND(I2)
           ENDDO
           DO I2=1,N
            IF(ACTIVE(I2) .LE. 0.5)THEN
             STRING(I1,I2)=BASE(I2)
            ENDIF
           ENDDO
         ENDDO
        ENDIF
       ENDIF

C        WRITE(*,*)'********************************************'
C        WRITE(*,*)'NEW-ROUND: CHILDREN GO FIRST'
C        WRITE(*,*)'********************************************'
C       WRITE(*,*)'NEW GENES GOING FORWARD:GENE NUM.AND STRING-1-10 SET'
C        WRITE(*,*)'********************************************'
C       DO I1=1,TOP3
C         WRITE(*,134)I1,STRING(I1,1),STRING(I1,2),STRING(I1,3),
C    $STRING(I1,4),STRING(I1,5),STRING(I1,6),STRING(I1,7),STRING(I1,8),
C    $STRING(I1,9),STRING(I1,10)
C       ENDDO
C        WRITE(*,*)'********************************************'
C       WRITE(*,*)'NEW GENES GOING FORWARD:GENE NUM.AND STRING-11-20 SET'
C        WRITE(*,*)'********************************************'
C       DO I1=1,TOP3
C         WRITE(*,134)I1,STRING(I1,11),STRING(I1,12),STRING(I1,13),
C    $STRING(I1,14),STRING(I1,15),STRING(I1,16),STRING(I1,17)
C    $,STRING(I1,18),STRING(I1,19),STRING(I1,20)
C       ENDDO
C       WRITE(*,*)'********************************************'
C       WRITE(*,*)'NEW GENES GOING FORWARD:GENE NUM.AND STRING-21-30 SET'
C        WRITE(*,*)'********************************************'
C       DO I1=1,TOP3
C         WRITE(*,135)I1,STRING(I1,21),STRING(I1,22),
C    $STRING(I1,23),STRING(I1,24),STRING(I1,25),STRING(I1,26),
C    $STRING(I1,27),STRING(I1,28),STRING(I1,29),STRING(I1,30)
C       ENDDO
C        WRITE(*,*)'***********************************'
C       WRITE(*,*)'NEW GENES GOING FORWARD:GENE NUM.AND STRING-31-36 SET'
C        WRITE(*,*)'***********************************'
C       DO I1=1,TOP3
C         WRITE(*,135)I1,STRING(I1,31),STRING(I1,32),
C    $STRING(I1,33),STRING(I1,34),STRING(I1,35),STRING(I1,36)
C       ENDDO



C       IF(KEEP .EQ. 0)THEN
C         WRITE(*,*)'***************************************'
C         WRITE(*,*)POPULATION-TOP,' BAD GENES BEING ELIMINATED'
C         WRITE(*,*)'********************************************'
C         WRITE(*,*)'***************************************'
C         WRITE(*,*)POPULATION-TOP,' NEW GENES ADDED TO POPULATION'
C         WRITE(*,*)'********************************************'
C       ENDIF
C       IF(KEEP .EQ. 1)THEN
C         WRITE(*,*)'***************************************'
C         WRITE(*,*)POPULATION-TOP,' BAD GENES BEING ELIMINATED'
C         WRITE(*,*)'********************************************'
C         WRITE(*,*)'***************************************'
C         WRITE(*,*)TOP,'PARENT GENES GOING FORWARD',TOP/2,'PAIRS'
C         WRITE(*,*)'********************************************'
C         WRITE(*,*)'***************************************'
C         WRITE(*,*)CHILDREN,'CHILDREN GENES BEING ADDED TO POP'
C         WRITE(*,*)'********************************************'
C         WRITE(*,*)'***************************************'
C         WRITE(*,*)POPULATION-TOP-CHILDREN,'NEW GENES ADDED TO POP'
C         WRITE(*,*)'********************************************'
C         WRITE(*,*)'***************************************'
C         WRITE(*,*)POPULATION,'IN POPULATION'
C         WRITE(*,*)'********************************************'
C       ENDIF

C        DO I2=1,N
C          WRITE(*,*)'VARIABLE',I2,'UPPER, LOWER BOUNDS,UP-LOW=',
C    $UPBOUND(I2),LOWBOUND(I2),UPBOUND(I2)-LOWBOUND(I2)
C        ENDDO
        
        ENDDO

C*************************
C        END OF MACHINE-LEARNING-GENETIC APPROACH
C*************************

        STOP
        END

C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
      SUBROUTINE  PASS(TPARA,DESPOTENTIAL,DESIRED,DESWEIGHT,DESEXPO,
     $DESCOST,OVERRIDE,PRINTSCREEN,GENERATION)
C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

      IMPLICIT NONE

      INTEGER PRINTSCREEN,OVERRIDE,GENERATION
      DOUBLE PRECISION DESCOST(50),DESPOTENTIAL,SCORE(10)
      DOUBLE PRECISION TPARA(50),DESIRED(3)
      DOUBLE PRECISION DESWEIGHT(50),DESEXPO(50)

CCCCCCCCCCCCCCCCCCCCCCCCC
C      APERATURE (18 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC

       DOUBLE PRECISION A1
       DOUBLE PRECISION A2
       DOUBLE PRECISION A3
       DOUBLE PRECISION A4
       DOUBLE PRECISION A5
       DOUBLE PRECISION A6
       DOUBLE PRECISION A7
       DOUBLE PRECISION A8
       DOUBLE PRECISION A9
       DOUBLE PRECISION A10
       DOUBLE PRECISION A11
       DOUBLE PRECISION A12
       DOUBLE PRECISION A13
       DOUBLE PRECISION A14
       DOUBLE PRECISION A15
       DOUBLE PRECISION A16
       DOUBLE PRECISION A17
       DOUBLE PRECISION A18

CCCCCCCCCCCCCCCCCCCCCCCCC
C      SOURCETUBE (12 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC
       DOUBLE PRECISION FORPLUSX3SOURCETUBEX1
       DOUBLE PRECISION FORPLUSX3SOURCETUBEX2
       DOUBLE PRECISION FORMINUSX3SOURCETUBEX1
       DOUBLE PRECISION FORMINUSX3SOURCETUBEX2
       DOUBLE PRECISION FORPLUSX2SOURCETUBEX1
       DOUBLE PRECISION FORPLUSX2SOURCETUBEX3
       DOUBLE PRECISION FORMINUSX2SOURCETUBEX1
       DOUBLE PRECISION FORMINUSX2SOURCETUBEX3
       DOUBLE PRECISION FORPLUSX1SOURCETUBEX2
       DOUBLE PRECISION FORPLUSX1SOURCETUBEX3
       DOUBLE PRECISION FORMINUSX1SOURCETUBEX2
       DOUBLE PRECISION FORMINUSX1SOURCETUBEX3
CCCCCCCCCCCCCCCCCCCCCCCCC
C     POWER DEPENDENCY (6 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC

      DOUBLE PRECISION MAGFACEPOWERX1MINUS
      DOUBLE PRECISION MAGFACEPOWERX1PLUS
      DOUBLE PRECISION MAGFACEPOWERX2MINUS
      DOUBLE PRECISION MAGFACEPOWERX2PLUS
      DOUBLE PRECISION MAGFACEPOWERX3MINUS
      DOUBLE PRECISION MAGFACEPOWERX3PLUS


       OPEN(UNIT=88,FILE='BROKEN-OPTIMA.dat',STATUS='UNKNOWN')
 
123   FORMAT(I6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.9
     $,1X,F16.6,1X,F16.6,1X,F16.6,1X,F16.6)

C      WRITE(*,*)'SOLVING'

CCCCCCCCCCCCCCCCC
C      BASELINE DESIGN PARAMETERS
C      FOR SINGLE RUN OVERRIDES
CCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCC
C      BEAM SPREAD (18 parameters)
CCCCCCCCCCCCCCCCCC

        A1=TPARA(1)
        A2=TPARA(2)
        A3=TPARA(3)
        A4=TPARA(4)
        A5=TPARA(5)
        A6=TPARA(6)
        A7=TPARA(7)
        A8=TPARA(8)
        A9=TPARA(9)
        A10=TPARA(10)
        A11=TPARA(11)
        A12=TPARA(12)
        A13=TPARA(13)
        A14=TPARA(14)
        A15=TPARA(15)
        A16=TPARA(16)
        A17=TPARA(17)
        A18=TPARA(18)

CCCCCCCCCCCCCCCCCCCCCCCCC
C      SOURCETUBE (12 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC

        FORPLUSX3SOURCETUBEX1=TPARA(19)
        FORPLUSX3SOURCETUBEX2=TPARA(20)
        FORMINUSX3SOURCETUBEX1=TPARA(21)
        FORMINUSX3SOURCETUBEX2=TPARA(22)
        FORPLUSX2SOURCETUBEX1=TPARA(23)
        FORPLUSX2SOURCETUBEX3=TPARA(24)
        FORMINUSX2SOURCETUBEX1=TPARA(25)
        FORMINUSX2SOURCETUBEX3=TPARA(26)
        FORPLUSX1SOURCETUBEX2=TPARA(27)
        FORPLUSX1SOURCETUBEX3=TPARA(28)
        FORMINUSX1SOURCETUBEX2=TPARA(29)
        FORMINUSX1SOURCETUBEX3=TPARA(30)

CCCCCCCCCCCCCCCCCCCCCCCCC
C     POWER DEPENDENCY (6 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC

       MAGFACEPOWERX1MINUS=TPARA(31)
       MAGFACEPOWERX1PLUS=TPARA(32)
       MAGFACEPOWERX2MINUS=TPARA(33)
       MAGFACEPOWERX2PLUS=TPARA(34)
       MAGFACEPOWERX3MINUS=TPARA(35)
       MAGFACEPOWERX3PLUS=TPARA(36)



CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      CALL SOLVER(SCORE,OVERRIDE,
     $PRINTSCREEN,
     $A1,
     $A2,
     $A3,
     $A4,
     $A5,
     $A6,
     $A7,
     $A8,
     $A9,
     $A10,
     $A11,
     $A12,
     $A13,
     $A14,
     $A15,
     $A16,
     $A17,
     $A18,
     $FORPLUSX3SOURCETUBEX1,
     $FORPLUSX3SOURCETUBEX2,
     $FORMINUSX3SOURCETUBEX1,
     $FORMINUSX3SOURCETUBEX2,
     $FORPLUSX2SOURCETUBEX1,
     $FORPLUSX2SOURCETUBEX3,
     $FORMINUSX2SOURCETUBEX1,
     $FORMINUSX2SOURCETUBEX3,
     $FORPLUSX1SOURCETUBEX2,
     $FORPLUSX1SOURCETUBEX3,
     $FORMINUSX1SOURCETUBEX2,
     $FORMINUSX1SOURCETUBEX3,
     $MAGFACEPOWERX1MINUS,
     $MAGFACEPOWERX1PLUS,
     $MAGFACEPOWERX2MINUS,
     $MAGFACEPOWERX2PLUS,
     $MAGFACEPOWERX3MINUS,
     $MAGFACEPOWERX3PLUS)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C       A TOTAL COST FUNCTION: COMBINES DIFFERENT OBJECTIVES
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCC
C    SCORE 1 REPRESENTS THE TOTALCOST
CCCCCCCCCC
         DESCOST(1)=DABS(SCORE(1)-DESIRED(1))

C       WRITE(*,*)'DECOST(1)=',DESCOST(1)


CCCCCCCCCC
C    SCORE 2 REPRESENTS ...
CCCCCCCCCC
         DESCOST(2)=DABS(SCORE(2)-DESIRED(2))

C       WRITE(*,*)'DECOST(2)=',DESCOST(2)


         DESPOTENTIAL=
     $DESWEIGHT(1)*DESCOST(1)**DESEXPO(1)
     $+DESWEIGHT(2)*DESCOST(2)**DESEXPO(2)

       WRITE(88,123)GENERATION,DESPOTENTIAL,DESCOST(1),DESCOST(2)

C       WRITE(*,*)'TOTAL WEIGHTED DESIGN COST=',DESPOTENTIAL

       RETURN
       END

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE SOLVER(SCORE,OVERRIDE,
     $PRINTSCREEN,
     $A1,
     $A2,
     $A3,
     $A4,
     $A5,
     $A6,
     $A7,
     $A8,
     $A9,
     $A10,
     $A11,
     $A12,
     $A13,
     $A14,
     $A15,
     $A16,
     $A17,
     $A18,
     $FORPLUSX3SOURCETUBEX1,
     $FORPLUSX3SOURCETUBEX2,
     $FORMINUSX3SOURCETUBEX1,
     $FORMINUSX3SOURCETUBEX2,
     $FORPLUSX2SOURCETUBEX1,
     $FORPLUSX2SOURCETUBEX3,
     $FORMINUSX2SOURCETUBEX1,
     $FORMINUSX2SOURCETUBEX3,
     $FORPLUSX1SOURCETUBEX2,
     $FORPLUSX1SOURCETUBEX3,
     $FORMINUSX1SOURCETUBEX2,
     $FORMINUSX1SOURCETUBEX3,
     $MAGFACEPOWERX1MINUS,
     $MAGFACEPOWERX1PLUS,
     $MAGFACEPOWERX2MINUS,
     $MAGFACEPOWERX2PLUS,
     $MAGFACEPOWERX3MINUS,
     $MAGFACEPOWERX3PLUS)

C************************************************
C           CONCENTRATED SOLAR CODE BY T. ZOHDI
C************************************************
C************************************************
C          SUPER FAST RAY TRACING FOR LIGHTBOX
C          CAN EASILY DI ARRAYS, RACKS,ETC.
C
C                CODE BY T. ZOHDI
C************************************************
Cffmpeg -i LIGHTBOX-SIM-ZOHDI.mp4 -acodec copy -vcodec copy -f mov LIGHTBOX-SIM-ZOHDI.mov

        IMPLICIT NONE

        INTEGER I,NTARGETSX1,NTARGETSX2,NTARGETSX3,COUNT,NTARGETS
        INTEGER IR,NVOXELX1,NVOXELX2,NVOXELX3,IRNUM,OVERRIDE
        INTEGER RANDSEED,REFLECTIONS,I1,I2,I3,IKEY,PRINTSCREEN
        DOUBLE PRECISION X1,X2,X3
        DOUBLE PRECISION TARDELTAX1,TARDELTAX2,TARDELTAX3,SUM
        DOUBLE PRECISION TARGETX1(1000),TARGETX2(1000),TARGETX3(1000)
        DOUBLE PRECISION TARGETRADIUSX1(1000),TARGETRADIUSX2(1000)
     $,TARGETRADIUSX3(1000),CONDITION(1000),TARGETABSORB(1000)
        DOUBLE PRECISION PX1(1000),PX2(1000),PX3(1000)
        DOUBLE PRECISION DELTAX1,DELTAX2,DELTAX3
        DOUBLE PRECISION RANDNUMBER,TIME,TIMELIMIT
        DOUBLE PRECISION RLIGHTX1TPDT(1000000),RLIGHTX2TPDT(1000000)
     $,RLIGHTX3TPDT(1000000),WAVELENGTH(1000000)
        DOUBLE PRECISION RLIGHTX1T(1000000),RLIGHTX2T(1000000)
     $,RLIGHTX3T(1000000)
        DOUBLE PRECISION VLIGHTX1(1000000),VLIGHTX2(1000000),
     $VLIGHTX3(1000000)
        DOUBLE PRECISION VLIGHT0,NORMX1,NORMX2,NORMX3,DELTAT
        DOUBLE PRECISION POPOUT,A1,A2,A3,A4,A5,A6,A7,A8,A9
        DOUBLE PRECISION A10,A11,A12,A13,A14,A15,A16,A17,A18
        DOUBLE PRECISION RCOUNT,RLIGHTS,TFLAG(1000000)
       DOUBLE PRECISION WALLX1MINUSCUTOFF,WALLX1PLUSCUTOFF
       DOUBLE PRECISION WALLX2MINUSCUTOFF,WALLX2PLUSCUTOFF
       DOUBLE PRECISION WALLX3MINUSCUTOFF,WALLX3PLUSCUTOFF
       DOUBLE PRECISION GRADF(3),XDIST(3),TERM1,TERM2
       DOUBLE PRECISION GNORM,VNORM,VN,THETAI
       DOUBLE PRECISION NTIWVARIABLE(1000000),MAGRATW
       DOUBLE PRECISION NTIVARIABLE(1000000),MAGRAT
       DOUBLE PRECISION RPER,RPAR,TIMEMULTIPLIER
       DOUBLE PRECISION BIGRPAR,BIGRPER,BIGR
       DOUBLE PRECISION NX1,NX2,NX3,RADIUS
       DOUBLE PRECISION POWERX1(1000000),POWERX2(1000000),
     $POWERX3(1000000)
       DOUBLE PRECISION IRRAD(1000000),IRRADO(1000000),REF,RAYTOL
       DOUBLE PRECISION TOTALFACEPOWERX1MINUS,TOTALFACEPOWERX1PLUS
       DOUBLE PRECISION TOTALFACEPOWERX2MINUS,TOTALFACEPOWERX2PLUS
       DOUBLE PRECISION TOTALFACEPOWERX3MINUS,TOTALFACEPOWERX3PLUS
       DOUBLE PRECISION IRRADOX1MINUS,IRRADOX1PLUS
       DOUBLE PRECISION IRRADOX2MINUS,IRRADOX2PLUS
       DOUBLE PRECISION IRRADOX3MINUS,IRRADOX3PLUS
       INTEGER RAYCOUNT,RACKX1X2,RACKX2X3,RACKX1X3,RACKX1,RACKX2,RACKX3
       DOUBLE PRECISION FORPLUSX3SOURCETUBEX1,FORPLUSX3SOURCETUBEX2
       DOUBLE PRECISION FORMINUSX3SOURCETUBEX1,FORMINUSX3SOURCETUBEX2
       DOUBLE PRECISION FORPLUSX2SOURCETUBEX1,FORPLUSX2SOURCETUBEX3
       DOUBLE PRECISION FORMINUSX2SOURCETUBEX1,FORMINUSX2SOURCETUBEX3
       DOUBLE PRECISION FORPLUSX1SOURCETUBEX2,FORPLUSX1SOURCETUBEX3
       DOUBLE PRECISION FORMINUSX1SOURCETUBEX2,FORMINUSX1SOURCETUBEX3
       INTEGER X1MINUSON,X1PLUSON,X2MINUSON,X2PLUSON,X3MINUSON,X3PLUSON
       DOUBLE PRECISION RAYDENSITY,STEPFACTOR
       DOUBLE PRECISION NTIWX1MINUS,NTIWX1PLUS,NTIWX2MINUS,NTIWX2PLUS
       DOUBLE PRECISION NTIWX3MINUS,NTIWX3PLUS
       DOUBLE PRECISION NTIX1MINUS,NTIX1PLUS,NTIX2MINUS,NTIX2PLUS
       DOUBLE PRECISION NTIX3MINUS,NTIX3PLUS
       DOUBLE PRECISION WAVELENGTHX1MINUS,WAVELENGTHX1PLUS
       DOUBLE PRECISION WAVELENGTHX2MINUS,WAVELENGTHX2PLUS
       DOUBLE PRECISION WAVELENGTHX3MINUS,WAVELENGTHX3PLUS
       INTEGER NRAYSPLUSX1,NRAYSMINUSX1
       INTEGER NRAYSPLUSX2,NRAYSMINUSX2
       INTEGER NRAYSPLUSX3,NRAYSMINUSX3,MOVIEFRAMES
       DOUBLE PRECISION DELTAMOVIEFRAME,MOVIETIME
       DOUBLE PRECISION POWERMAGNITUDE,MAGFACEPOWERX1MINUS
     $,MAGFACEPOWERX1PLUS,MAGFACEPOWERX2MINUS
     $,MAGFACEPOWERX2PLUS,MAGFACEPOWERX3MINUS,
     $MAGFACEPOWERX3PLUS,SCORE(10),TOTALCOST

        OPEN(UNIT=38,FILE='PATH.dat',STATUS='UNKNOWN')
        OPEN(UNIT=39,FILE='LAPLACIAN-SMOOTHED-REAL3D.dat',
     $STATUS='UNKNOWN')


 299   FORMAT(F16.8,1X,F16.8,1X,F16.8,F16.8,1X,F16.8,1X,F16.4
     $,1X,F16.4,1X,F16.4,1X,F16.8,1X,F16.8,1X,F16.8,1X,F16.8,1X,
     $F16.8,1X,F16.8,1X,F16.8,1X,F16.8,1X,F16.8,1X,F16.8,1X,F16.8,
     $1X,F16.8,1X,F16.8,1X,F16.8)

CCCCCCCCCCCCCCCCC
C     OPTIMIZATION PARAMETERS (36)
CCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCC
C      BEAM SPREAD (18 parameters)
CCCCCCCCCCCCCCCCCC
c       A1=0.5D0
c       A2=0.5D0
c       A3=0.5D0
c       A4=0.5D0
c       A5=0.5D0
c       A6=0.5D0
c       A7=0.5D0
c       A8=0.5D0
c       A9=0.5D0
c       A10=0.5D0
c       A11=0.5D0
c       A12=0.5D0
c       A13=0.5D0
c       A14=0.5D0
c       A15=0.5D0
c       A16=0.5D0
c       A17=0.5D0
c       A18=0.5D0
CCCCCCCCCCCCCCCCCCCCCCCCC
C      SOURCETUBE (12 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC
c       FORPLUSX3SOURCETUBEX1=3.0D0
c       FORPLUSX3SOURCETUBEX2=0.5D0
c       FORMINUSX3SOURCETUBEX1=3.0D0
c       FORMINUSX3SOURCETUBEX2=0.5D0
c       FORPLUSX2SOURCETUBEX1=3.0D0
c       FORPLUSX2SOURCETUBEX3=0.5D0
c       FORMINUSX2SOURCETUBEX1=3.0D0
c       FORMINUSX2SOURCETUBEX3=0.5D0
c       FORPLUSX1SOURCETUBEX2=0.5D0
c       FORPLUSX1SOURCETUBEX3=0.5D0
c       FORMINUSX1SOURCETUBEX2=0.5D0
c       FORMINUSX1SOURCETUBEX3=0.5D0
CCCCCCCCCCCCCCCCCCCCCCCCC
C     POWER DEPENDENCY (6 parameters)
CCCCCCCCCCCCCCCCCCCCCCCCC
c      TOTALFACEPOWERX1MINUS=10000000.0D0
c      TOTALFACEPOWERX1PLUS=10000000.0D0
c      TOTALFACEPOWERX2MINUS=10000000.0D0
c      TOTALFACEPOWERX2PLUS=10000000.0D0
c      TOTALFACEPOWERX3MINUS=10000000.0D0
c      TOTALFACEPOWERX3PLUS=10000000.0D0
CCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCC
C      KEY PARAMETERS
CCCCCCCCCCCCCCCCCCCCCCCCC

c       MOVIE=1
       MOVIEFRAMES=100
       MOVIETIME=0.0D0
       STEPFACTOR=2.0D0
       RAYDENSITY=2000
       TIMEMULTIPLIER=5.0D0
       VLIGHT0=299792458.0D0
       REFLECTIONS=1
       RACKX1X3=1
       RACKX2X3=1
       RACKX1X2=1
       RACKX1=0
       RACKX2=0
       RACKX3=0

CCCCCCCCCCCCCCCCCC
C      BEAM SPREAD
CCCCCCCCCCCCCCCCCC

c       A1=0.5D0
c       A2=0.5D0
c       A3=0.5D0
c       A4=0.5D0
c       A5=0.5D0
c       A6=0.5D0
c       A7=0.5D0
c       A8=0.5D0
c       A9=0.5D0
c       A10=0.5D0
c       A11=0.5D0
c       A12=0.5D0
c       A13=0.5D0
c       A14=0.5D0
c       A15=0.5D0
c       A16=0.5D0
c       A17=0.5D0
c       A18=0.5D0

CCCCCCCCCCCCCCCCCCCCCCCCC
C      SOURCETUBE
CCCCCCCCCCCCCCCCCCCCCCCCC

c       FORPLUSX3SOURCETUBEX1=3.0D0
c       FORPLUSX3SOURCETUBEX2=0.5D0
c       FORMINUSX3SOURCETUBEX1=3.0D0
c       FORMINUSX3SOURCETUBEX2=0.5D0
c       FORPLUSX2SOURCETUBEX1=3.0D0
c       FORPLUSX2SOURCETUBEX3=0.5D0
c       FORMINUSX2SOURCETUBEX1=3.0D0
c       FORMINUSX2SOURCETUBEX3=0.5D0
c       FORPLUSX1SOURCETUBEX2=0.5D0
c       FORPLUSX1SOURCETUBEX3=0.5D0
c       FORMINUSX1SOURCETUBEX2=0.5D0
c       FORMINUSX1SOURCETUBEX3=0.5D0

       NRAYSPLUSX1=RAYDENSITY*FORPLUSX1SOURCETUBEX2
     $*FORPLUSX1SOURCETUBEX3
       NRAYSMINUSX1=RAYDENSITY*FORMINUSX1SOURCETUBEX2
     $*FORMINUSX1SOURCETUBEX3
       NRAYSPLUSX2=RAYDENSITY*FORPLUSX2SOURCETUBEX1
     $*FORPLUSX2SOURCETUBEX3
       NRAYSMINUSX2=RAYDENSITY*FORMINUSX2SOURCETUBEX1
     $*FORMINUSX2SOURCETUBEX3
       NRAYSPLUSX3=RAYDENSITY*FORPLUSX3SOURCETUBEX1
     $*FORPLUSX3SOURCETUBEX2
       NRAYSMINUSX3=RAYDENSITY*FORMINUSX3SOURCETUBEX1
     $*FORMINUSX3SOURCETUBEX2

       WRITE(*,*)'TOTAL RAYS=',
     $NRAYSPLUSX1+NRAYSMINUSX1+NRAYSPLUSX2+
     $NRAYSMINUSX2+NRAYSPLUSX3+NRAYSMINUSX3

       X1MINUSON=1
       X1PLUSON=1
       X2MINUSON=1
       X2PLUSON=1
       X3MINUSON=1
       X3PLUSON=1

      POWERMAGNITUDE=10000000.0D0
      MAGFACEPOWERX1MINUS=1.0D0
      MAGFACEPOWERX1PLUS=1.0D0
      MAGFACEPOWERX2MINUS=1.0D0
      MAGFACEPOWERX2PLUS=1.0D0
      MAGFACEPOWERX3MINUS=1.0D0
      MAGFACEPOWERX3PLUS=1.0D0

CCCCCCCCCCCCCCCCCCCCCCCCC
C      VOXEL MESH
CCCCCCCCCCCCCCCCCCCCCCCCC

       DELTAX1=0.05D0
       DELTAX2=0.05D0
       DELTAX3=0.05D0
       NVOXELX1=20
       NVOXELX2=20
       NVOXELX3=20

CCCCCCCCCCCCC
C     TARGETS
CCCCCCCCCCCCC

       NTARGETSX1=9
       NTARGETSX2=3
       NTARGETSX3=3
       TARDELTAX1=5.0D0*DELTAX1
       TARDELTAX2=5.0D0*DELTAX2
       TARDELTAX3=5.0D0*DELTAX3

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      TARGET #1
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

       COUNT=0

        IF(RACKX2X3 .EQ. 1)THEN
        I1=0
        X1=TARDELTAX1*I1
        DO I2=-NTARGETSX2,NTARGETSX2
         X2=TARDELTAX2*I2
          DO I3=-NTARGETSX3,NTARGETSX3
           X3=TARDELTAX3*I3
           IF(I2 .EQ. 0 .OR. I3 .EQ. 0)THEN
           GOTO 22
           ENDIF
           COUNT=COUNT+1
           TARGETX1(COUNT)=X1
           TARGETX2(COUNT)=X2
           TARGETX3(COUNT)=X3
           TARGETRADIUSX1(COUNT)=2.75D0*DELTAX1
           TARGETRADIUSX2(COUNT)=2.75D0*DELTAX2
           TARGETRADIUSX3(COUNT)=2.75D0*DELTAX3
           PX1(COUNT)=6.0D0
           PX2(COUNT)=6.0D0
           PX3(COUNT)=6.0D0
           TARGETABSORB(COUNT)=0.0D0
22       ENDDO
        ENDDO
        ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      TARGET #2
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

       IF(RACKX1X3 .EQ. 1)THEN
       DO I1=-NTARGETSX1,NTARGETSX1
        X1=TARDELTAX1*I1
         I2=0
         X2=TARDELTAX2*I2
          DO I3=-NTARGETSX3,NTARGETSX3
           X3=TARDELTAX3*I3
           IF(I1 .EQ. 0 .OR. I3 .EQ. 0)THEN
           GOTO 23
           ENDIF
           COUNT=COUNT+1
           TARGETX1(COUNT)=X1
           TARGETX2(COUNT)=X2
           TARGETX3(COUNT)=X3
           TARGETRADIUSX1(COUNT)=2.75D0*DELTAX1
           TARGETRADIUSX2(COUNT)=2.75D0*DELTAX2
           TARGETRADIUSX3(COUNT)=2.75D0*DELTAX3
           PX1(COUNT)=6.0D0
           PX2(COUNT)=6.0D0
           PX3(COUNT)=6.0D0
           TARGETABSORB(COUNT)=0.0D0
23         ENDDO
        ENDDO
        ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      TARGET #3
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

       IF(RACKX1X2 .EQ. 1)THEN
       DO I1=-NTARGETSX1,NTARGETSX1
        X1=TARDELTAX1*I1
        DO I2=-NTARGETSX2,NTARGETSX2
         X2=TARDELTAX2*I2
           IF(I1 .EQ. 0 .OR. I2 .EQ. 0)THEN
           GOTO 24
           ENDIF
           I3=0
           X3=TARDELTAX3*I3
           COUNT=COUNT+1
           TARGETX1(COUNT)=X1
           TARGETX2(COUNT)=X2
           TARGETX3(COUNT)=X3
           TARGETRADIUSX1(COUNT)=2.75D0*DELTAX1
           TARGETRADIUSX2(COUNT)=2.75D0*DELTAX2
           TARGETRADIUSX3(COUNT)=2.75D0*DELTAX3
           PX1(COUNT)=6.0D0
           PX2(COUNT)=6.0D0
           PX3(COUNT)=6.0D0
           TARGETABSORB(COUNT)=0.0D0
24      ENDDO
        ENDDO
        ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      TARGET #4
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

       IF(RACKX1 .EQ. 1)THEN
       DO I1=-NTARGETSX1,NTARGETSX1
        X1=TARDELTAX1*I1
         I2=0
         X2=TARDELTAX2*I2
           I3=0
           X3=TARDELTAX3*I3
           COUNT=COUNT+1
           TARGETX1(COUNT)=X1
           TARGETX2(COUNT)=X2
           TARGETX3(COUNT)=X3
           TARGETRADIUSX1(COUNT)=2.75D0*DELTAX1
           TARGETRADIUSX2(COUNT)=2.75D0*DELTAX2
           TARGETRADIUSX3(COUNT)=2.75D0*DELTAX3
           PX1(COUNT)=6.0D0
           PX2(COUNT)=6.0D0
           PX3(COUNT)=6.0D0
           TARGETABSORB(COUNT)=0.0D0
         ENDDO
        ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      TARGET #5
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        IF(RACKX2 .EQ. 1)THEN
        I1=0
        X1=TARDELTAX1*I1
        DO I2=-NTARGETSX2,NTARGETSX2
         X2=TARDELTAX2*I2
           I3=0
           X3=TARDELTAX3*I3
           COUNT=COUNT+1
           TARGETX1(COUNT)=X1
           TARGETX2(COUNT)=X2
           TARGETX3(COUNT)=X3
           TARGETRADIUSX1(COUNT)=2.75D0*DELTAX1
           TARGETRADIUSX2(COUNT)=2.75D0*DELTAX2
           TARGETRADIUSX3(COUNT)=2.75D0*DELTAX3
           PX1(COUNT)=6.0D0
           PX2(COUNT)=6.0D0
           PX3(COUNT)=6.0D0
           TARGETABSORB(COUNT)=0.0D0
         ENDDO
        ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      TARGET #6
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC


       IF(RACKX3 .EQ. 1)THEN
        I1=0
        X1=TARDELTAX1*I1
         I2=0
         X2=TARDELTAX2*I2
          DO I3=-NTARGETSX3,NTARGETSX3
           X3=TARDELTAX3*I3
           COUNT=COUNT+1
           TARGETX1(COUNT)=X1
           TARGETX2(COUNT)=X2
           TARGETX3(COUNT)=X3
           TARGETRADIUSX1(COUNT)=2.75D0*DELTAX1
           TARGETRADIUSX2(COUNT)=2.75D0*DELTAX2
           TARGETRADIUSX3(COUNT)=2.75D0*DELTAX3
           PX1(COUNT)=2.0D0
           PX2(COUNT)=2.0D0
           PX3(COUNT)=2.0D0
           TARGETABSORB(COUNT)=0.0D0
         ENDDO
        ENDIF
        NTARGETS=COUNT

CCCCCCCCCCCCCCCCCCCCCCCCC
C     REFLECTION DATA
CCCCCCCCCCCCCCCCCCCCCCCCC

      WALLX1MINUSCUTOFF=-3*(NVOXELX1+1)*DELTAX1
      WALLX1PLUSCUTOFF=3*(NVOXELX1+1)*DELTAX1
      WALLX2MINUSCUTOFF=-(NVOXELX2+1)*DELTAX2
      WALLX2PLUSCUTOFF=(NVOXELX2+1)*DELTAX2
      WALLX3MINUSCUTOFF=-(NVOXELX3+1)*DELTAX3
      WALLX3PLUSCUTOFF=(NVOXELX3+1)*DELTAX3

CCCCCCCCCCCCCCCCCCCCCCCCC
C     WAVELENGTH DEPENDENCY: N's A FUNCTION OF WHERE THE RAYS CAME FROM
CCCCCCCCCCCCCCCCCCCCCCCCC

      NTIWX1MINUS=2.0D0
      NTIWX1PLUS=2.0D0
      NTIWX2MINUS=2.0D0
      NTIWX2PLUS=2.0D0
      NTIWX3MINUS=2.0D0
      NTIWX3PLUS=2.0D0
      MAGRATW=2.0D0
      NTIX1MINUS=2.0D0
      NTIX1PLUS=2.0D0
      NTIX2MINUS=2.0D0
      NTIX2PLUS=2.0D0
      NTIX3MINUS=2.0D0
      NTIX3PLUS=2.00D0
      MAGRAT=1.0D0
      
      WAVELENGTHX1MINUS=4.0D0
      WAVELENGTHX1PLUS=4.0D0
      WAVELENGTHX2MINUS=4.0D0
      WAVELENGTHX2PLUS=4.0D0
      WAVELENGTHX3MINUS=4.0D0
      WAVELENGTHX3PLUS=4.0D0

CCCCCCCCCCCCCCCCCCCCCCCCC
C     POWER DEPENDENCY
CCCCCCCCCCCCCCCCCCCCCCCCC

      TOTALFACEPOWERX1MINUS=MAGFACEPOWERX1MINUS*POWERMAGNITUDE
      TOTALFACEPOWERX1PLUS=MAGFACEPOWERX1PLUS*POWERMAGNITUDE
      TOTALFACEPOWERX2MINUS=MAGFACEPOWERX2MINUS*POWERMAGNITUDE
      TOTALFACEPOWERX2PLUS=MAGFACEPOWERX2PLUS*POWERMAGNITUDE
      TOTALFACEPOWERX3MINUS=MAGFACEPOWERX3MINUS*POWERMAGNITUDE
      TOTALFACEPOWERX3PLUS=MAGFACEPOWERX3PLUS*POWERMAGNITUDE

      IRRADOX1MINUS=TOTALFACEPOWERX1MINUS/NRAYSMINUSX1
      IRRADOX1PLUS=TOTALFACEPOWERX1PLUS/NRAYSPLUSX1
      IRRADOX2MINUS=TOTALFACEPOWERX2MINUS/NRAYSMINUSX2
      IRRADOX2PLUS=TOTALFACEPOWERX2PLUS/NRAYSPLUSX2
      IRRADOX3MINUS=TOTALFACEPOWERX3MINUS/NRAYSMINUSX3
      IRRADOX3PLUS=TOTALFACEPOWERX3PLUS/NRAYSPLUSX3


      RAYTOL=0.000001D0
      REF=0.0D0
      RADIUS=0.0001D0

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      RANDOM NUMBER GENERATOR
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        RANDSEED=201
        IRNUM=2011
        RANDNUMBER=111.1D0
        DO IR=1,RANDSEED
         CALL GETRAND(IRNUM,RANDNUMBER)
        ENDDO

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      INITIALIZATION
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

       DO IR=1,1000000
        TFLAG(IR)=0
       ENDDO

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      PROPAGATED RLIGHTS
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

       DELTAT=STEPFACTOR*
     $((DELTAX1+DELTAX2+DELTAX3)/3.0D0)/VLIGHT0

       TIMELIMIT=TIMEMULTIPLIER*
     $((2.0D0*NVOXELX1*DELTAX1+2.0D0*NVOXELX2*DELTAX2
     $+2.0D0*NVOXELX3*DELTAX3)/3.0D0)/VLIGHT0

       DELTAMOVIEFRAME=TIMELIMIT/MOVIEFRAMES

CCCCCCCCCCCCCCCCCCCCCCCC
C     RAY GENERATION
CCCCCCCCCCCCCCCCCCCCCCCC

       RAYCOUNT=0
CCCCCCCCCCCCCCCCCCCC
C       -X1 DIRECTION
CCCCCCCCCCCCCCCCCCCC

        IF(X1MINUSON .EQ. 1)THEN
c       DO I=-LIGHTROWSFORX1,LIGHTROWSFORX1
        DO IR=1,NRAYSMINUSX1
         RAYCOUNT=RAYCOUNT+1
         IRRAD(RAYCOUNT)=IRRADOX1MINUS
         IRRADO(RAYCOUNT)=IRRADOX1MINUS
         RLIGHTX1T(RAYCOUNT)=WALLX1PLUSCUTOFF
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=FORMINUSX1SOURCETUBEX2*(RANDNUMBER-0.5D0)/0.5D0
         RLIGHTX2T(RAYCOUNT)=POPOUT
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=FORMINUSX1SOURCETUBEX3*(RANDNUMBER-0.5D0)/0.5D0
         RLIGHTX3T(RAYCOUNT)=POPOUT
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX1=A1*POPOUT-1.0D0
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX2=A2*POPOUT
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX3=A3*POPOUT
         NORMX1=NORMX1/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         NORMX2=NORMX2/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         NORMX3=NORMX3/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         VLIGHTX1(RAYCOUNT)=NORMX1*VLIGHT0
         VLIGHTX2(RAYCOUNT)=NORMX2*VLIGHT0
         VLIGHTX3(RAYCOUNT)=NORMX3*VLIGHT0
         POWERX1(RAYCOUNT)=IRRAD(RAYCOUNT)*NORMX1
         POWERX2(RAYCOUNT)=IRRAD(RAYCOUNT)*NORMX2
         POWERX3(RAYCOUNT)=IRRAD(RAYCOUNT)*NORMX3
         NTIVARIABLE(RAYCOUNT)=NTIX1MINUS
         NTIWVARIABLE(RAYCOUNT)=NTIWX1MINUS
         WAVELENGTH(RAYCOUNT)=WAVELENGTHX1MINUS
        ENDDO
c       ENDDO
        ENDIF

CCCCCCCCCCCCCCCCCCCC
C       +X1 DIRECTION
CCCCCCCCCCCCCCCCCCCC

        IF(X1PLUSON .EQ. 1)THEN
c       DO I=-LIGHTROWSFORX1,LIGHTROWSFORX1
        DO IR=NRAYSMINUSX1+1,NRAYSMINUSX1+NRAYSPLUSX1
         RAYCOUNT=RAYCOUNT+1
         IRRAD(RAYCOUNT)=IRRADOX1PLUS
         IRRADO(RAYCOUNT)=IRRADOX1PLUS
         RLIGHTX1T(RAYCOUNT)=WALLX1MINUSCUTOFF
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=FORPLUSX1SOURCETUBEX2*(RANDNUMBER-0.5D0)/0.5D0
         RLIGHTX2T(RAYCOUNT)=POPOUT
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=FORPLUSX1SOURCETUBEX3*(RANDNUMBER-0.5D0)/0.5D0
         RLIGHTX3T(RAYCOUNT)=POPOUT
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX1=A4*POPOUT+1.0D0
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX2=A5*POPOUT
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX3=A6*POPOUT
         NORMX1=NORMX1/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         NORMX2=NORMX2/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         NORMX3=NORMX3/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         VLIGHTX1(RAYCOUNT)=NORMX1*VLIGHT0
         VLIGHTX2(RAYCOUNT)=NORMX2*VLIGHT0
         VLIGHTX3(RAYCOUNT)=NORMX3*VLIGHT0
         POWERX1(RAYCOUNT)=IRRAD(RAYCOUNT)*NORMX1
         POWERX2(RAYCOUNT)=IRRAD(RAYCOUNT)*NORMX2
         POWERX3(RAYCOUNT)=IRRAD(RAYCOUNT)*NORMX3
         NTIVARIABLE(RAYCOUNT)=NTIX1PLUS
         NTIWVARIABLE(RAYCOUNT)=NTIWX1PLUS
         WAVELENGTH(RAYCOUNT)=WAVELENGTHX1PLUS
        ENDDO
c       ENDDO
        ENDIF
CCCCCCCCCCCCCCCCCCCC
C       -X2 DIRECTION
CCCCCCCCCCCCCCCCCCCC

        IF(X2MINUSON .EQ. 1)THEN
c       DO I=-LIGHTROWSFORX2,LIGHTROWSFORX2
        DO IR=NRAYSMINUSX1+NRAYSPLUSX1+1,NRAYSMINUSX1+NRAYSPLUSX1
     $+NRAYSMINUSX2
         RAYCOUNT=RAYCOUNT+1
         IRRAD(RAYCOUNT)=IRRADOX2MINUS
         IRRADO(RAYCOUNT)=IRRADOX2MINUS
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=FORMINUSX2SOURCETUBEX1*(RANDNUMBER-0.5D0)/0.5D0
         RLIGHTX1T(RAYCOUNT)=POPOUT
         RLIGHTX2T(RAYCOUNT)=WALLX2PLUSCUTOFF
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=FORMINUSX2SOURCETUBEX3*(RANDNUMBER-0.5D0)/0.5D0
         RLIGHTX3T(RAYCOUNT)=POPOUT
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX1=A7*POPOUT
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX2=A8*POPOUT-1.0D0
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX3=A9*POPOUT
         NORMX1=NORMX1/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         NORMX2=NORMX2/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         NORMX3=NORMX3/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         VLIGHTX1(RAYCOUNT)=NORMX1*VLIGHT0
         VLIGHTX2(RAYCOUNT)=NORMX2*VLIGHT0
         VLIGHTX3(RAYCOUNT)=NORMX3*VLIGHT0
         POWERX1(RAYCOUNT)=IRRAD(RAYCOUNT)*NORMX1
         POWERX2(RAYCOUNT)=IRRAD(RAYCOUNT)*NORMX2
         POWERX3(RAYCOUNT)=IRRAD(RAYCOUNT)*NORMX3
         NTIVARIABLE(RAYCOUNT)=NTIX2MINUS
         NTIWVARIABLE(RAYCOUNT)=NTIWX2MINUS
         WAVELENGTH(RAYCOUNT)=WAVELENGTHX2MINUS
        ENDDO
c       ENDDO
        ENDIF

CCCCCCCCCCCCCCCCCCCC
C       +X2 DIRECTION
CCCCCCCCCCCCCCCCCCCC

        IF(X2PLUSON .EQ. 1)THEN
c       DO I=-LIGHTROWSFORX2,LIGHTROWSFORX2
        DO IR=NRAYSMINUSX1+NRAYSPLUSX1+NRAYSMINUSX2+1,
     $NRAYSMINUSX1+NRAYSPLUSX1+NRAYSMINUSX2+NRAYSPLUSX2
         RAYCOUNT=RAYCOUNT+1
         IRRAD(RAYCOUNT)=IRRADOX2PLUS
         IRRADO(RAYCOUNT)=IRRADOX2PLUS
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=FORPLUSX2SOURCETUBEX1*(RANDNUMBER-0.5D0)/0.5D0
         RLIGHTX1T(RAYCOUNT)=POPOUT
         RLIGHTX2T(RAYCOUNT)=WALLX2MINUSCUTOFF
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=FORPLUSX2SOURCETUBEX3*(RANDNUMBER-0.5D0)/0.5D0
         RLIGHTX3T(RAYCOUNT)=POPOUT
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX1=A10*POPOUT
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX2=A11*POPOUT+1.0D0
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX3=A12*POPOUT
         NORMX1=NORMX1/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         NORMX2=NORMX2/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         NORMX3=NORMX3/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         VLIGHTX1(RAYCOUNT)=NORMX1*VLIGHT0
         VLIGHTX2(RAYCOUNT)=NORMX2*VLIGHT0
         VLIGHTX3(RAYCOUNT)=NORMX3*VLIGHT0
         POWERX1(RAYCOUNT)=IRRAD(RAYCOUNT)*NORMX1
         POWERX2(RAYCOUNT)=IRRAD(RAYCOUNT)*NORMX2
         POWERX3(RAYCOUNT)=IRRAD(RAYCOUNT)*NORMX3
         NTIVARIABLE(RAYCOUNT)=NTIX2PLUS
         NTIWVARIABLE(RAYCOUNT)=NTIWX2PLUS
         WAVELENGTH(RAYCOUNT)=WAVELENGTHX2PLUS
        ENDDO
c       ENDDO
        ENDIF
   
CCCCCCCCCCCCCCCCCCCC
C       -X3 DIRECTION
CCCCCCCCCCCCCCCCCCCC


c       DO I=-LIGHTROWSFORX3,LIGHTROWSFORX3
        IF(X3MINUSON .EQ. 1)THEN
        DO IR=NRAYSMINUSX1+NRAYSPLUSX1+NRAYSMINUSX2+NRAYSPLUSX2+1,
     $NRAYSMINUSX1+NRAYSPLUSX1+NRAYSMINUSX2+NRAYSPLUSX2+NRAYSMINUSX3
         RAYCOUNT=RAYCOUNT+1
         IRRAD(RAYCOUNT)=IRRADOX3MINUS
         IRRADO(RAYCOUNT)=IRRADOX3MINUS
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=FORMINUSX3SOURCETUBEX1*(RANDNUMBER-0.5D0)/0.5D0
         RLIGHTX1T(RAYCOUNT)=POPOUT
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=FORMINUSX3SOURCETUBEX2*(RANDNUMBER-0.5D0)/0.5D0
         RLIGHTX2T(RAYCOUNT)=POPOUT
         RLIGHTX3T(RAYCOUNT)=WALLX3PLUSCUTOFF
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX1=A13*POPOUT
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX2=A14*POPOUT
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX3=A15*POPOUT-1.0D0
         NORMX1=NORMX1/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         NORMX2=NORMX2/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         NORMX3=NORMX3/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         VLIGHTX1(RAYCOUNT)=NORMX1*VLIGHT0
         VLIGHTX2(RAYCOUNT)=NORMX2*VLIGHT0
         VLIGHTX3(RAYCOUNT)=NORMX3*VLIGHT0
         POWERX1(RAYCOUNT)=IRRAD(IR)*NORMX1
         POWERX2(RAYCOUNT)=IRRAD(IR)*NORMX2
         POWERX3(RAYCOUNT)=IRRAD(IR)*NORMX3
         NTIVARIABLE(RAYCOUNT)=NTIX3MINUS
         NTIWVARIABLE(RAYCOUNT)=NTIWX3MINUS
         WAVELENGTH(RAYCOUNT)=WAVELENGTHX3MINUS
        ENDDO
c       ENDDO
       ENDIF

CCCCCCCCCCCCCCCCCCCC
C       +X3 DIRECTION
CCCCCCCCCCCCCCCCCCCC

        IF(X3PLUSON .EQ. 1)THEN
c       DO I=-LIGHTROWSFORX3,LIGHTROWSFORX3
        DO IR=NRAYSMINUSX1+NRAYSPLUSX1+NRAYSMINUSX2+NRAYSPLUSX2
     $+NRAYSMINUSX3+1,NRAYSMINUSX1+NRAYSPLUSX1+NRAYSMINUSX2+NRAYSPLUSX2
     $+NRAYSMINUSX3+NRAYSPLUSX3
         RAYCOUNT=RAYCOUNT+1
         IRRAD(RAYCOUNT)=IRRADOX3PLUS
         IRRADO(RAYCOUNT)=IRRADOX3PLUS
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=FORPLUSX3SOURCETUBEX1*(RANDNUMBER-0.5D0)/0.5D0
         RLIGHTX1T(RAYCOUNT)=POPOUT
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=FORPLUSX3SOURCETUBEX2*(RANDNUMBER-0.5D0)/0.5D0
         RLIGHTX2T(RAYCOUNT)=POPOUT
         RLIGHTX3T(RAYCOUNT)=WALLX3MINUSCUTOFF
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX1=A16*POPOUT
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX2=A17*POPOUT
         CALL GETRAND(IRNUM,RANDNUMBER)
         POPOUT=(RANDNUMBER-0.5D0)/0.5D0
         NORMX3=A18*POPOUT+1.0D0
         NORMX1=NORMX1/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         NORMX2=NORMX2/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         NORMX3=NORMX3/
     $(DSQRT(NORMX1**2.0D0+NORMX2**2.0D0+NORMX3**2.0D0))
         VLIGHTX1(RAYCOUNT)=NORMX1*VLIGHT0
         VLIGHTX2(RAYCOUNT)=NORMX2*VLIGHT0
         VLIGHTX3(RAYCOUNT)=NORMX3*VLIGHT0
         POWERX1(RAYCOUNT)=IRRAD(RAYCOUNT)*NORMX1
         POWERX2(RAYCOUNT)=IRRAD(RAYCOUNT)*NORMX2
         POWERX3(RAYCOUNT)=IRRAD(RAYCOUNT)*NORMX3
         NTIVARIABLE(RAYCOUNT)=NTIX3PLUS
         NTIWVARIABLE(RAYCOUNT)=NTIWX3PLUS
         WAVELENGTH(RAYCOUNT)=WAVELENGTHX3PLUS
        ENDDO
c       ENDDO
        ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      PROPAGATE THE RLIGHTS
C
C      THIS COMPUTES THE RLIGHTS INTERSECTION
C      WITH THE VOXELS, THUS COMPUTING  THE POWER CONTENT
C      IN A VOXEL. THE RESIDENCE IS TAGGED AND ASSUMES IT IS
C      A CONTINUOUS BEAM. IF THE BEAM IS REFLECTED LATER AND
C      RETURNS THROUGH THE VOXEL THEN ANOTHER SOURCE IS ADDED
C      TO THE PREVIOUS VALUE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

       TIME=0.0D0
       DO WHILE(TIME .LE. TIMELIMIT)
C        WRITE(*,*)'TIME=',TIME/TIMELIMIT

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C    WITH NO RAY REFLECTIONS
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      IF(REFLECTIONS .EQ. 0)THEN
         DO IR=1,RAYCOUNT
          DO I=1,NTARGETS
           CONDITION(I)=(
     $(DABS((RLIGHTX1T(IR)-TARGETX1(I)))/TARGETRADIUSX1(I))**PX1(I)+
     $(DABS((RLIGHTX2T(IR)-TARGETX2(I)))/TARGETRADIUSX2(I))**PX2(I)+
     $(DABS((RLIGHTX3T(IR)-TARGETX3(I)))/TARGETRADIUSX3(I))**PX3(I))
         IF(CONDITION(I) .LE. 1.0D0)THEN
          TFLAG(IR)=1.0D0
          GOTO 144
         ENDIF
         ENDDO
144      RLIGHTX1TPDT(IR)=RLIGHTX1T(IR)+VLIGHTX1(IR)*DELTAT
         RLIGHTX2TPDT(IR)=RLIGHTX2T(IR)+VLIGHTX2(IR)*DELTAT
         RLIGHTX3TPDT(IR)=RLIGHTX3T(IR)+VLIGHTX3(IR)*DELTAT
        ENDDO
       ENDIF

        IF(REFLECTIONS .EQ. 1)THEN

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C    WITH RAY REFLECTIONS
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

       DO IR=1,RAYCOUNT

CCCCCCCCCCCCCC
C     CHECKING TARGETS
CCCCCCCCCCCCCC

          IKEY=1
          DO I=1,NTARGETS
           CONDITION(I)=(
     $(DABS((RLIGHTX1T(IR)-TARGETX1(I)))/TARGETRADIUSX1(I))**PX1(I)+
     $(DABS((RLIGHTX2T(IR)-TARGETX2(I)))/TARGETRADIUSX2(I))**PX2(I)+
     $(DABS((RLIGHTX3T(IR)-TARGETX3(I)))/TARGETRADIUSX3(I))**PX3(I))
         IF(CONDITION(I) .LE. 1.0D0)THEN
          TFLAG(IR)=1.0D0
          IKEY=I
          GOTO 145
         ENDIF
        ENDDO

145   IF(
     $(CONDITION(IKEY) .LE. 1.0D0)
     $.OR. (RLIGHTX1T(IR) .GE. WALLX1PLUSCUTOFF)
     $.OR. (RLIGHTX1T(IR) .LE. WALLX1MINUSCUTOFF)
     $.OR. (RLIGHTX2T(IR) .GE. WALLX2PLUSCUTOFF)
     $.OR. (RLIGHTX2T(IR) .LE. WALLX2MINUSCUTOFF)
     $.OR. (RLIGHTX3T(IR) .GE. WALLX3PLUSCUTOFF)
     $.OR. (RLIGHTX3T(IR) .LE. WALLX3MINUSCUTOFF)
     $)THEN

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      WALLS (6 OF THEM)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

          IF(RLIGHTX1T(IR) .GE. WALLX1PLUSCUTOFF)THEN
           NX1=-1.0D0
           NX2=0.0D0
           NX3=0.0D0
           GOTO 123
          ENDIF
          IF(RLIGHTX1T(IR) .LE. WALLX1MINUSCUTOFF)THEN
           NX1=1.0D0
           NX2=0.0D0
           NX3=0.0D0
           GOTO 123
          ENDIF
          IF(RLIGHTX2T(IR) .GE. WALLX2PLUSCUTOFF)THEN
           NX1=0.0D0
           NX2=-1.0D0
           NX3=0.0D0
           GOTO 123
          ENDIF
          IF(RLIGHTX2T(IR) .LE. WALLX2MINUSCUTOFF)THEN
           NX1=0.0D0
           NX2=1.0D0
           NX3=0.0D0
           GOTO 123
          ENDIF
          IF(RLIGHTX3T(IR) .GE. WALLX3PLUSCUTOFF)THEN
           NX1=0.0D0
           NX2=0.0D0
           NX3=-1.0D0
           GOTO 123
          ENDIF
          IF(RLIGHTX3T(IR) .LE. WALLX3MINUSCUTOFF)THEN
           NX1=0.0D0
           NX2=0.0D0
           NX3=1.0D0
           GOTO 123
          ENDIF

CCCCCCCCCCCCCCCCCCCCCCCC
C        IF THE TARGET
CCCCCCCCCCCCCCCCCCCCCCCC

         TFLAG(IR)=1.0D0

         GRADF(1)=0.0D0
         GRADF(2)=0.0D0
         GRADF(3)=0.0D0

         XDIST(1)=RLIGHTX1T(IR)-TARGETX1(IKEY)
         XDIST(2)=RLIGHTX2T(IR)-TARGETX2(IKEY)
         XDIST(3)=RLIGHTX3T(IR)-TARGETX3(IKEY)
     
CCCCCCCCCCC
C   COMPUTING THE NORMALS
CCCCCCCCCCC

       IF(DABS(XDIST(1)) .GT. 0.00000001D0)THEN
        TERM1=PX1(IKEY)*(((DABS(XDIST(1)))/TARGETRADIUSX1(IKEY))
     $**(PX1(IKEY)-1.0D0))
        TERM2=XDIST(1)/(TARGETRADIUSX1(IKEY)*DABS(XDIST(1)))
        GRADF(1)=TERM1*TERM2
       ENDIF
 
       IF(DABS(XDIST(2)) .GT. 0.00000001D0)THEN
        TERM1=PX2(IKEY)*(((DABS(XDIST(2)))/TARGETRADIUSX2(IKEY))
     $**(PX2(IKEY)-1.0D0))
        TERM2=XDIST(2)/(TARGETRADIUSX2(IKEY)*DABS(XDIST(2)))
        GRADF(2)=TERM1*TERM2
       ENDIF

       IF(DABS(XDIST(3)) .GT. 0.00000001D0)THEN
        TERM1=PX3(IKEY)*(((DABS(XDIST(3)))/TARGETRADIUSX3(IKEY))
     $**(PX3(IKEY)-1.0D0))
        TERM2=XDIST(3)/(TARGETRADIUSX3(IKEY)*DABS(XDIST(3)))
        GRADF(3)=TERM1*TERM2
       ENDIF

        GNORM=DSQRT(GRADF(1)**2.0D0+GRADF(2)**2.0D0+GRADF(3)**2.0D0)
                    
        GRADF(1)=GRADF(1)/GNORM
        GRADF(2)=GRADF(2)/GNORM
        GRADF(3)=GRADF(3)/GNORM

        NX1=GRADF(1)
        NX2=GRADF(2)
        NX3=GRADF(3)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C        DETERMINING THE NORMAL PROJECTION AND SUBTRACTING IT OUT
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

123     VNORM=DSQRT
     $(VLIGHTX1(IR)**2.0D0+VLIGHTX2(IR)**2.0D0+VLIGHTX3(IR)**2.0D0)
        VN=VLIGHTX1(IR)*NX1+VLIGHTX2(IR)*NX2+VLIGHTX3(IR)*NX3

        IF(VN .GT. 0.0D0)THEN
         GOTO 777
        ENDIF

          THETAI=ACOS(DABS(VN)/VNORM)

          VLIGHTX1(IR)=VLIGHTX1(IR)-2.0D0*VN*NX1
          VLIGHTX2(IR)=VLIGHTX2(IR)-2.0D0*VN*NX2
          VLIGHTX3(IR)=VLIGHTX3(IR)-2.0D0*VN*NX3

CCCCCCCCCCCCCCCCCCCCCCCCCCC
C       IF X1+ WALL
CCCCCCCCCCCCCCCCCCCCCCCCCCC

         IF(RLIGHTX1T(IR) .GE. WALLX1PLUSCUTOFF)THEN
          IF(DABS((SIN(THETAI))/NTIWVARIABLE(IR)) .GT. 1.0D0)THEN
           RPER=1.0D0
           RPAR=1.0D0
          ENDIF
          IF(DABS((SIN(THETAI))/NTIWVARIABLE(IR)) .LE. 1.0D0)THEN
           RPER=
     $(COS(THETAI)-(1.0D0/MAGRATW)
     $*(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)/
     $(COS(THETAI)+(1.0D0/MAGRATW)
     $*(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)

           RPAR=(
     $(1.0D0/MAGRATW)*(NTIWVARIABLE(IR)**2.0D0)*COS(THETAI)
     $-(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)
     $/(
     $(1.0D0/MAGRATW)*(NTIWVARIABLE(IR)**2.0D0)*COS(THETAI)
     $+(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)
          ENDIF
          RLIGHTX1T(IR)=WALLX1PLUSCUTOFF-1.5D0*DELTAX1
          GOTO 124
         ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCC
C       IF X1- WALL
CCCCCCCCCCCCCCCCCCCCCCCCCCC

         IF(RLIGHTX1T(IR) .LE. WALLX1MINUSCUTOFF)THEN
          IF(DABS((SIN(THETAI))/NTIWVARIABLE(IR)) .GT. 1.0D0)THEN
           RPER=1.0D0
           RPAR=1.0D0
          ENDIF
          IF(DABS((SIN(THETAI))/NTIWVARIABLE(IR)) .LE. 1.0D0)THEN
           RPER=
     $(COS(THETAI)-(1.0D0/MAGRATW)
     $*(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)/
     $(COS(THETAI)+(1.0D0/MAGRATW)
     $*(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)

           RPAR=(
     $(1.0D0/MAGRATW)*(NTIWVARIABLE(IR)**2.0D0)*COS(THETAI)
     $-(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)
     $/(
     $(1.0D0/MAGRATW)*(NTIWVARIABLE(IR)**2.0D0)*COS(THETAI)
     $+(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)
          ENDIF
          RLIGHTX1T(IR)=WALLX1MINUSCUTOFF+1.5D0*DELTAX1
          GOTO 124
         ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCC
C       IF X2+ WALL
CCCCCCCCCCCCCCCCCCCCCCCCCCC

         IF(RLIGHTX2T(IR) .GE. WALLX2PLUSCUTOFF)THEN
          IF(DABS((SIN(THETAI))/NTIWVARIABLE(IR)) .GT. 1.0D0)THEN
           RPER=1.0D0
           RPAR=1.0D0
          ENDIF
          IF(DABS((SIN(THETAI))/NTIWVARIABLE(IR)) .LE. 1.0D0)THEN
           RPER=
     $(COS(THETAI)-(1.0D0/MAGRATW)
     $*(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)/
     $(COS(THETAI)+(1.0D0/MAGRATW)
     $*(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)

           RPAR=(
     $(1.0D0/MAGRATW)*(NTIWVARIABLE(IR)**2.0D0)*COS(THETAI)
     $-(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)
     $/(
     $(1.0D0/MAGRATW)*(NTIWVARIABLE(IR)**2.0D0)*COS(THETAI)
     $+(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)
          ENDIF
          RLIGHTX2T(IR)=WALLX2PLUSCUTOFF-1.5D0*DELTAX2
          GOTO 124
         ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCC
C       IF X2- WALL
CCCCCCCCCCCCCCCCCCCCCCCCCCC

         IF(RLIGHTX2T(IR) .LE. WALLX2MINUSCUTOFF)THEN
          IF(DABS((SIN(THETAI))/NTIWVARIABLE(IR)) .GT. 1.0D0)THEN
           RPER=1.0D0
           RPAR=1.0D0
          ENDIF
          IF(DABS((SIN(THETAI))/NTIWVARIABLE(IR)) .LE. 1.0D0)THEN
           RPER=
     $(COS(THETAI)-(1.0D0/MAGRATW)
     $*(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)/
     $(COS(THETAI)+(1.0D0/MAGRATW)
     $*(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)

           RPAR=(
     $(1.0D0/MAGRATW)*(NTIWVARIABLE(IR)**2.0D0)*COS(THETAI)
     $-(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)
     $/(
     $(1.0D0/MAGRATW)*(NTIWVARIABLE(IR)**2.0D0)*COS(THETAI)
     $+(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)
          ENDIF
          RLIGHTX2T(IR)=WALLX2MINUSCUTOFF+1.5D0*DELTAX2
          GOTO 124
         ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCC
C       IF X3+ WALL
CCCCCCCCCCCCCCCCCCCCCCCCCCC

         IF(RLIGHTX3T(IR) .GE. WALLX3PLUSCUTOFF)THEN
          IF(DABS((SIN(THETAI))/NTIWVARIABLE(IR)) .GT. 1.0D0)THEN
           RPER=1.0D0
           RPAR=1.0D0
          ENDIF
          IF(DABS((SIN(THETAI))/NTIWVARIABLE(IR)) .LE. 1.0D0)THEN
           RPER=
     $(COS(THETAI)-(1.0D0/MAGRATW)
     $*(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)/
     $(COS(THETAI)+(1.0D0/MAGRATW)
     $*(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)

           RPAR=(
     $(1.0D0/MAGRATW)*(NTIWVARIABLE(IR)**2.0D0)*COS(THETAI)
     $-(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)
     $/(
     $(1.0D0/MAGRATW)*(NTIWVARIABLE(IR)**2.0D0)*COS(THETAI)
     $+(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)
          ENDIF
          RLIGHTX3T(IR)=WALLX3PLUSCUTOFF-1.5D0*DELTAX3
          GOTO 124
         ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCC
C       IF X3- WALL
CCCCCCCCCCCCCCCCCCCCCCCCCCC

         IF(RLIGHTX3T(IR) .LE. WALLX3MINUSCUTOFF)THEN
          IF(DABS((SIN(THETAI))/NTIWVARIABLE(IR)) .GT. 1.0D0)THEN
           RPER=1.0D0
           RPAR=1.0D0
          ENDIF
          IF(DABS((SIN(THETAI))/NTIWVARIABLE(IR)) .LE. 1.0D0)THEN
           RPER=
     $(COS(THETAI)-(1.0D0/MAGRATW)
     $*(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)/
     $(COS(THETAI)+(1.0D0/MAGRATW)
     $*(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)

           RPAR=(
     $(1.0D0/MAGRATW)*(NTIWVARIABLE(IR)**2.0D0)*COS(THETAI)
     $-(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)
     $/(
     $(1.0D0/MAGRATW)*(NTIWVARIABLE(IR)**2.0D0)*COS(THETAI)
     $+(NTIWVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)
          ENDIF
          RLIGHTX3T(IR)=WALLX3MINUSCUTOFF+1.5D0*DELTAX3
          GOTO 124
         ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      IF NOT A WALL=TARGET
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

          IF(DABS((SIN(THETAI))/NTIVARIABLE(IR)) .GT. 1.0D0)THEN
           RPER=1.0D0
           RPAR=1.0D0
          ENDIF
          IF(DABS((SIN(THETAI))/NTIVARIABLE(IR)) .LE. 1.0D0)THEN
           RPER=
     $(COS(THETAI)-(1.0D0/MAGRAT)
     $*(NTIVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)/
     $(COS(THETAI)+(1.0D0/MAGRAT)
     $*(NTIVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)

           RPAR=(
     $(1.0D0/MAGRAT)*(NTIVARIABLE(IR)**2.0D0)*COS(THETAI)
     $-(NTIVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)
     $/(
     $(1.0D0/MAGRAT)*(NTIVARIABLE(IR)**2.0D0)*COS(THETAI)
     $+(NTIVARIABLE(IR)**2.0D0-(SIN(THETAI))**2.0D0)**0.5D0)
           ENDIF


CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C         REFLECTIVITIES
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

124       BIGRPAR=RPAR**2.0D0
          BIGRPER=RPER**2.0D0
          BIGR=0.5D0*(BIGRPAR+BIGRPER)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C         ABSORPTION AND IRRADIANCE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
            
      IF(CONDITION(IKEY) .LE. 1.0D0)THEN
       TARGETABSORB(IKEY)=TARGETABSORB(IKEY)
     $+(IRRAD(IR)-BIGR*IRRAD(IR))
      ENDIF
      IRRAD(IR)=BIGR*IRRAD(IR)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C         AN ERROR CHECK-VELOCITY MAGNITUDE SHOULD NOT CHANGE)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

          VNORM=DSQRT
     $(VLIGHTX1(IR)**2.0D0+VLIGHTX2(IR)**2.0D0+VLIGHTX3(IR)**2.0D0)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C         POWER IN EACH RAY
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

          POWERX1(IR)=VLIGHTX1(IR)*IRRAD(IR)/VNORM
          POWERX2(IR)=VLIGHTX2(IR)*IRRAD(IR)/VNORM
          POWERX3(IR)=VLIGHTX3(IR)*IRRAD(IR)/VNORM

          REF=REF+1.0D0

          ENDIF

CCCCCCCCCCCCCCCCCCCCC
C        TRAPPING THE LIGHT IF ABSORBED
CCCCCCCCCCCCCCCCCCCCC

 777     IF(IRRAD(IR)/IRRADO(IR) .LE. RAYTOL)THEN
          RLIGHTX1TPDT(IR)=RLIGHTX1T(IR)
          RLIGHTX2TPDT(IR)=RLIGHTX2T(IR)
          RLIGHTX3TPDT(IR)=RLIGHTX3T(IR)
          GOTO 779
         ENDIF

          RLIGHTX1TPDT(IR)=VLIGHTX1(IR)*DELTAT+RLIGHTX1T(IR)
          RLIGHTX2TPDT(IR)=VLIGHTX2(IR)*DELTAT+RLIGHTX2T(IR)
          RLIGHTX3TPDT(IR)=VLIGHTX3(IR)*DELTAT+RLIGHTX3T(IR)
C*********************
C        END LOOP OVER RAYS
C********************

779       ENDDO
         ENDIF

CCCCCCCCCCCCCC
C     MOVIES
CCCCCCCCCCCCCC

       IF(PRINTSCREEN .EQ. 1)THEN
        IF(TIME .GE. MOVIETIME)THEN
       WRITE(38,*)'ZONE'
       DO IR=1,RAYCOUNT
        WRITE(38,299)RLIGHTX1TPDT(IR),RLIGHTX2TPDT(IR),RLIGHTX3TPDT(IR),
     $2.0D0*RADIUS,IRRAD(IR)/IRRADO(IR),VLIGHTX1(IR),VLIGHTX2(IR)
     $,VLIGHTX3(IR),POWERX1(IR)/IRRADO(IR),POWERX2(IR)/IRRADO(IR),
     $POWERX3(IR)/IRRADO(IR),0.0D0,WAVELENGTH(IR)
       ENDDO

       COUNT=0
       DO I1=1,NTARGETS
           COUNT=COUNT+1
        WRITE(38,299)TARGETX1(COUNT),TARGETX2(COUNT),
     $TARGETX3(COUNT),2.0D0*TARGETRADIUSX1(COUNT),
     $0.0D0,0.0D0,0.0D0,0.0D0,0.0D0,0.0D0,0.0D0,
     $TARGETABSORB(COUNT)/(
     $TOTALFACEPOWERX1MINUS+
     $TOTALFACEPOWERX1PLUS+
     $TOTALFACEPOWERX2MINUS+
     $TOTALFACEPOWERX2PLUS+
     $TOTALFACEPOWERX3MINUS+
     $TOTALFACEPOWERX3PLUS),0.0D0
       ENDDO
       MOVIETIME=MOVIETIME+DELTAMOVIEFRAME
       ENDIF
      ENDIF

       DO IR=1,RAYCOUNT
        RLIGHTX1T(IR)=RLIGHTX1TPDT(IR)
        RLIGHTX2T(IR)=RLIGHTX2TPDT(IR)
        RLIGHTX3T(IR)=RLIGHTX3TPDT(IR)
       ENDDO

       TIME=TIME+DELTAT
       ENDDO
        RCOUNT=0
        DO IR=1,RAYCOUNT
         RCOUNT=RCOUNT+TFLAG(IR)
         TFLAG(IR)=1.0D0
        ENDDO
        RLIGHTS=RAYCOUNT

C        WRITE(*,*)'RAYS HITTING TARGET=',RCOUNT
C        WRITE(*,*)'TOTAL RAYS=',RLIGHTS
C        WRITE(*,*)'FRACTION OF RAYS HITTING TARGET=',RCOUNT/RLIGHTS
C        WRITE(*,*)'TOTAL NUMBER OF REFLECTIONS=',REF
        SUM=0.0D0
        DO I=1,NTARGETS
         SUM=TARGETABSORB(I)+SUM
        ENDDO
C        WRITE(*,*)'FRACTION OF POWER ABSORBED BY PODS=',
C    $SUM/(
C    $TOTALFACEPOWERX1MINUS*X1MINUSON+
C    $TOTALFACEPOWERX1PLUS*X1PLUSON+
C    $TOTALFACEPOWERX2MINUS*X2MINUSON+
C    $TOTALFACEPOWERX2PLUS*X2PLUSON+
C    $TOTALFACEPOWERX3MINUS*X3MINUSON+
C    $TOTALFACEPOWERX3PLUS*X3PLUSON)
C      WRITE(*,*)'POWER USAGE EFFECTIVENESS BY PODS=',
C    $(TOTALFACEPOWERX1MINUS*X1MINUSON+
C    $TOTALFACEPOWERX1PLUS*X1PLUSON+
C    $TOTALFACEPOWERX2MINUS*X2MINUSON+
C    $TOTALFACEPOWERX2PLUS*X2PLUSON+
C    $TOTALFACEPOWERX3MINUS*X3MINUSON+
C    $TOTALFACEPOWERX3PLUS*X3PLUSON)/SUM

      TOTALCOST=1.0D0-
     $SUM/(
     $TOTALFACEPOWERX1MINUS*X1MINUSON+
     $TOTALFACEPOWERX1PLUS*X1PLUSON+
     $TOTALFACEPOWERX2MINUS*X2MINUSON+
     $TOTALFACEPOWERX2PLUS*X2PLUSON+
     $TOTALFACEPOWERX3MINUS*X3MINUSON+
     $TOTALFACEPOWERX3PLUS*X3PLUSON)

      SCORE(1)=TOTALCOST
      SCORE(2)=
     $MAGFACEPOWERX1MINUS+MAGFACEPOWERX1PLUS
     $+MAGFACEPOWERX2MINUS+MAGFACEPOWERX2PLUS
     $+MAGFACEPOWERX3MINUS+MAGFACEPOWERX3PLUS


       IF(OVERRIDE .EQ. 1)THEN
        STOP
       ENDIF


      RETURN
      END
 

      SUBROUTINE GETRAND(IRNUM,RANDNUMBER)

      IMPLICIT NONE
      DOUBLE PRECISION RANDOM
      DOUBLE PRECISION DA,DB,DC,RANDNUMBER
      INTEGER IRNUM
       DA=16807.0D0
       DB=2147483647.0D0
       DC=2147483648.0D0
       IRNUM=DABS(MOD(DA*IRNUM,DB)+0.5D0)
       RANDOM=DFLOAT(IRNUM)/DC
       RANDNUMBER=RANDOM
      RETURN
      END
